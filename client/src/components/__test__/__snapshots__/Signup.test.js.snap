// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Page Component Tests renders without crashing 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
    "wrapInvoke": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": BrowserRouter {
      "_reactInternalInstance": Object {},
      "_reactInternals": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 146,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 144,
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 148,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 150,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 152,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useState",
                    "useContext",
                    "useContext",
                  ],
                  "_debugID": 154,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                    "lineNumber": 13,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 156,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 124,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 158,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 125,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 161,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 126,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "img",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 159,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 134,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 164,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 135,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 166,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 136,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 173,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 137,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 174,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 138,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 180,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 181,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "First name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "First name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 182,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": First name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 175,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 176,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 139,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 177,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="FirstName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  First name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 167,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 148,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 190,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 149,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 191,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 150,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 196,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 197,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Last name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Last name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 198,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Last name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 192,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 151,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 193,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 160,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 205,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 161,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 206,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 162,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 212,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 213,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Username",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Username",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 214,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Username,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 207,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 208,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 163,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 209,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="Username"
                                          name="Username"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Username
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 173,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 222,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 174,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 223,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 175,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 230,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 231,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Password",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Password",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 232,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Password,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 224,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 176,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 225,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 226,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 185,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "br",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {},
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {},
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 227,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 5,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(at least 6 character)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(at least 6 character)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (at least 6 character),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <br />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "br",
                                            "updateQueue": null,
                                          },
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Password
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 170,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 189,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 171,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 190,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 242,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 191,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "button",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 243,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "    ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "    ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 244,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 199,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 248,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 250,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 252,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": "a",
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": <a
                                                    href="/"
                                                  >
                                                     Cancel 
                                                  </a>,
                                                  "tag": 5,
                                                  "treeBaseDuration": 0,
                                                  "type": "a",
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": Object {
                                                "firstContext": Object {
                                                  "context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "_calculateChangedBits": null,
                                                      "_context": [Circular],
                                                    },
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                  "next": null,
                                                  "observedBits": 1073741823,
                                                },
                                                "lanes": 0,
                                                "responders": null,
                                              },
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 9,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 11,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "updateQueue": null,
                                          },
                                          "stateNode":     ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "button",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 5,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="buttons"
                                      >
                                        <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>
                                            
                                        <a
                                          href="/"
                                        >
                                           Cancel 
                                        </a>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autocomplete="password"
                                      name="Password"
                                      required=""
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "form",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 1,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": Object {
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Array [
                          Array [],
                          [Function],
                        ],
                        "_currentValue2": Array [
                          Array [],
                          [Function],
                        ],
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router-History",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "lanes": 0,
                    "responders": null,
                  },
                  "elementType": [Function],
                  "firstEffect": null,
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": null,
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "flags": 1,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <SignUP />,
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <SignUP />,
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <SignUP />,
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 141,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 141,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childLanes": 0,
              "dependencies": null,
              "elementType": null,
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 1,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "_debugRootType": "createLegacyRoot()",
                "callbackNode": null,
                "callbackPriority": 0,
                "containerInfo": <div>
                  <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "entangledLanes": 0,
                "entanglements": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "eventTimes": Array [
                  -1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "expirationTimes": Array [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                ],
                "expiredLanes": 0,
                "finishedLanes": 0,
                "finishedWork": null,
                "hydrate": false,
                "interactionThreadID": 18,
                "memoizedInteractions": Set {},
                "mutableReadLanes": 0,
                "mutableSourceEagerHydrationData": null,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pendingLanes": 0,
                "pingCache": null,
                "pingedLanes": 0,
                "suspendedLanes": 0,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": Object {
                  "callback": null,
                  "eventTime": 4158.6029,
                  "lane": 1,
                  "next": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastBaseUpdate": Object {
                  "callback": null,
                  "eventTime": 4158.6029,
                  "lane": 1,
                  "next": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "child": [Circular],
            "childLanes": 0,
            "dependencies": null,
            "elementType": null,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 148,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 150,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 152,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": Array [
                      "useState",
                      "useState",
                      "useState",
                      "useState",
                      "useContext",
                      "useContext",
                    ],
                    "_debugID": 154,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                      "lineNumber": 13,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 156,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 124,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 158,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 125,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 161,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 126,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "img",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 159,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 134,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 164,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 135,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 166,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 136,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 173,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 137,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 174,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 138,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 180,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 181,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "First name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "First name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 182,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": First name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 175,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 176,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 139,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 177,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="FirstName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    First name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 167,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 148,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 190,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 149,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 191,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 150,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 196,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 197,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Last name",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Last name",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 198,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Last name,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 192,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 151,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 193,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="LastName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 168,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 160,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 205,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 161,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 206,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 162,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 212,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 213,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Username",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Username",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 214,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Username,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 207,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 208,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 163,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 209,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="Username"
                                            name="Username"
                                            required=""
                                            type="text"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Username
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 169,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 173,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 222,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 174,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 223,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 175,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 230,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 231,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "Password",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "Password",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 232,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": " ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": " ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode":  ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": Password,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "p",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 224,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 176,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 225,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 3,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 226,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 185,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": "br",
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 4,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {},
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {},
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 227,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": null,
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": null,
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 5,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": "(at least 6 character)",
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": "(at least 6 character)",
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": (at least 6 character),
                                                "tag": 6,
                                                "treeBaseDuration": 0,
                                                "type": null,
                                                "updateQueue": null,
                                              },
                                              "stateNode": <br />,
                                              "tag": 5,
                                              "treeBaseDuration": 0,
                                              "type": "br",
                                              "updateQueue": null,
                                            },
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="password"
                                            name="Password"
                                            required=""
                                            type="password"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <p>
                                           
                                          Password
                                           
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 170,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 189,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 171,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 190,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 242,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 191,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "button",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 243,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "    ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "    ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 244,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 199,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 248,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 250,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": FiberNode {
                                                    "_debugHookTypes": null,
                                                    "_debugID": 252,
                                                    "_debugNeedsRemount": false,
                                                    "_debugOwner": [Circular],
                                                    "_debugSource": null,
                                                    "actualDuration": 0,
                                                    "actualStartTime": -1,
                                                    "alternate": null,
                                                    "child": null,
                                                    "childLanes": 0,
                                                    "dependencies": null,
                                                    "elementType": "a",
                                                    "firstEffect": null,
                                                    "flags": 0,
                                                    "index": 0,
                                                    "key": null,
                                                    "lanes": 0,
                                                    "lastEffect": null,
                                                    "memoizedProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "memoizedState": null,
                                                    "mode": 0,
                                                    "nextEffect": null,
                                                    "pendingProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "ref": null,
                                                    "return": [Circular],
                                                    "selfBaseDuration": 0,
                                                    "sibling": null,
                                                    "stateNode": <a
                                                      href="/"
                                                    >
                                                       Cancel 
                                                    </a>,
                                                    "tag": 5,
                                                    "treeBaseDuration": 0,
                                                    "type": "a",
                                                    "updateQueue": null,
                                                  },
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "firstEffect": null,
                                                  "flags": 1,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": null,
                                                  "tag": 11,
                                                  "treeBaseDuration": 0,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": Object {
                                                  "firstContext": Object {
                                                    "context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                    "next": null,
                                                    "observedBits": 1073741823,
                                                  },
                                                  "lanes": 0,
                                                  "responders": null,
                                                },
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 9,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "stateNode":     ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "button",
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "div",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 5,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <div
                                          class="buttons"
                                        >
                                          <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>
                                              
                                          <a
                                            href="/"
                                          >
                                             Cancel 
                                          </a>
                                        </div>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "div",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <div
                                      class="fields"
                                    >
                                      <br />
                                      <p>
                                         
                                        Password
                                         
                                      </p>
                                      <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />
                                      (*)
                                      <br />
                                      (at least 6 character)
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autocomplete="Username"
                                      name="Username"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "form",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": Object {
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": null,
                          "_currentRenderer2": null,
                          "_currentValue": Array [
                            Array [],
                            [Function],
                          ],
                          "_currentValue2": Array [
                            Array [],
                            [Function],
                          ],
                          "_threadCount": 0,
                        },
                        "next": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router-History",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "observedBits": 1073741823,
                      },
                      "lanes": 0,
                      "responders": null,
                    },
                    "elementType": [Function],
                    "firstEffect": null,
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": Object {
                            "baseQueue": null,
                            "baseState": "",
                            "memoizedState": "",
                            "next": null,
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": "",
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": null,
              "flags": 5,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Router {
                "_isMounted": true,
                "_pendingLocation": null,
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "unlisten": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "flags": 256,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <SignUP />,
                  }
                }
                refProp={null}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": FiberRootNode {
              "_debugRootType": "createLegacyRoot()",
              "callbackNode": null,
              "callbackPriority": 0,
              "containerInfo": <div>
                <div
                  class="Login"
                >
                  <div
                    class="loginImage"
                  >
                    <img
                      alt="login"
                      height="175"
                      src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                      style="position: relative; padding-top: 10px;"
                      width="240"
                    />
                  </div>
                  <form>
                    <div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          First name
                           
                        </p>
                         
                        <input
                          name="FirstName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Last name
                           
                        </p>
                        <input
                          name="LastName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Username
                           
                        </p>
                         
                        <input
                          autocomplete="Username"
                          name="Username"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Password
                           
                        </p>
                        <input
                          autocomplete="password"
                          name="Password"
                          required=""
                          type="password"
                          value=""
                        />
                        (*)
                        <br />
                        (at least 6 character)
                      </div>
                      <br />
                      <div
                        class="buttons"
                      >
                        <button
                          class="btn btn-primary"
                          type="button"
                        >
                          Register
                        </button>
                            
                        <a
                          href="/"
                        >
                           Cancel 
                        </a>
                      </div>
                    </div>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "entangledLanes": 0,
              "entanglements": Array [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "eventTimes": Array [
                -1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "expirationTimes": Array [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
              ],
              "expiredLanes": 0,
              "finishedLanes": 0,
              "finishedWork": null,
              "hydrate": false,
              "interactionThreadID": 18,
              "memoizedInteractions": Set {},
              "mutableReadLanes": 0,
              "mutableSourceEagerHydrationData": null,
              "pendingChildren": null,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pendingLanes": 0,
              "pingCache": null,
              "pingedLanes": 0,
              "suspendedLanes": 0,
              "tag": 0,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <SignUP />,
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalInstance": Object {},
            "_reactInternals": [Circular],
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <SignUP />,
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <SignUP />,
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <SignUP />,
              },
              "wrappingComponentProps": null,
            },
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 148,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 150,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 152,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useState",
                  "useContext",
                  "useContext",
                ],
                "_debugID": 154,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                  "lineNumber": 13,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 156,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                    "lineNumber": 124,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 158,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 125,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 161,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 126,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "img",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "img",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 159,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 134,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 164,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 135,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 166,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 136,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 173,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 137,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "br",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 174,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 138,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 180,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 181,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": "First name",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": "First name",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 182,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": First name,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "p",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 175,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 176,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 139,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 177,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "stateNode": <p>
                                 
                                First name
                                 
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <br />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "br",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 167,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 148,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 190,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 149,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 191,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 150,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 196,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 197,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "Last name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "Last name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 198,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": Last name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 192,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 151,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 193,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  Last name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 168,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 160,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 205,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 161,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 206,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 162,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 212,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 213,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Username",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Username",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 214,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Username,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 207,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 208,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 163,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 209,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="Username"
                                        name="Username"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Username
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 2,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 169,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 173,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 222,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 174,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 223,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 175,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 230,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 231,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Password",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Password",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 232,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Password,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 224,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 176,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 225,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 226,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 185,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "br",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {},
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {},
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 227,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 5,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(at least 6 character)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(at least 6 character)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (at least 6 character),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <br />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "br",
                                          "updateQueue": null,
                                        },
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Password
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 3,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 170,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 189,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 4,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 171,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 190,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 242,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 191,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "button",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 243,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "    ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "    ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 244,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 199,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 248,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 250,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 252,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": "a",
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": <a
                                                  href="/"
                                                >
                                                   Cancel 
                                                </a>,
                                                "tag": 5,
                                                "treeBaseDuration": 0,
                                                "type": "a",
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": Object {
                                              "firstContext": Object {
                                                "context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": [Circular],
                                                  },
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                                "next": null,
                                                "observedBits": 1073741823,
                                              },
                                              "lanes": 0,
                                              "responders": null,
                                            },
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": [Function],
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": [Function],
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 9,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "firstEffect": null,
                                          "flags": 1,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": null,
                                          "tag": 11,
                                          "treeBaseDuration": 0,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "updateQueue": null,
                                        },
                                        "stateNode":     ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "button",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 5,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <div
                                      class="buttons"
                                    >
                                      <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>
                                          
                                      <a
                                        href="/"
                                      >
                                         Cancel 
                                      </a>
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "form",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 1,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "div",
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": Object {
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": Array [
                        Array [],
                        [Function],
                      ],
                      "_currentValue2": Array [
                        Array [],
                        [Function],
                      ],
                      "_threadCount": 0,
                    },
                    "next": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "observedBits": 1073741823,
                  },
                  "lanes": 0,
                  "responders": null,
                },
                "elementType": [Function],
                "firstEffect": null,
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "firstEffect": null,
            "flags": 0,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": null,
          "flags": 5,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "_isMounted": true,
            "_pendingLocation": null,
            "_reactInternalInstance": Object {},
            "_reactInternals": [Circular],
            "context": Object {},
            "props": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "childLanes": 0,
        "dependencies": null,
        "elementType": [Function],
        "firstEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 148,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 150,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 152,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useState",
                  "useContext",
                  "useContext",
                ],
                "_debugID": 154,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                  "lineNumber": 13,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 156,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                    "lineNumber": 124,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 158,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 125,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 161,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 126,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "img",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "img",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 159,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 134,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 164,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 135,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 166,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 136,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 173,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 137,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "br",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 174,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 138,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 180,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 181,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": "First name",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": "First name",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 182,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": First name,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "p",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 175,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 176,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 139,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 177,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "stateNode": <p>
                                 
                                First name
                                 
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <br />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "br",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 167,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 148,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 190,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 149,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 191,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 150,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 196,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 197,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "Last name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "Last name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 198,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": Last name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 192,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 151,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 193,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  Last name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 168,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 160,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 205,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 161,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 206,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 162,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 212,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 213,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Username",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Username",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 214,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Username,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 207,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 208,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 163,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 209,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="Username"
                                        name="Username"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Username
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 2,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 169,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 173,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 222,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 174,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 223,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 175,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 230,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 231,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Password",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Password",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 232,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Password,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 224,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 176,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 225,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 226,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 185,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "br",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {},
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {},
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 227,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 5,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(at least 6 character)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(at least 6 character)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (at least 6 character),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <br />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "br",
                                          "updateQueue": null,
                                        },
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Password
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 3,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 170,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 189,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 4,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 171,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 190,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 242,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 191,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "button",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 243,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "    ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "    ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 244,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 199,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 248,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 250,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 252,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": "a",
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": <a
                                                  href="/"
                                                >
                                                   Cancel 
                                                </a>,
                                                "tag": 5,
                                                "treeBaseDuration": 0,
                                                "type": "a",
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": Object {
                                              "firstContext": Object {
                                                "context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": [Circular],
                                                  },
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                                "next": null,
                                                "observedBits": 1073741823,
                                              },
                                              "lanes": 0,
                                              "responders": null,
                                            },
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": [Function],
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": [Function],
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 9,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "firstEffect": null,
                                          "flags": 1,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": null,
                                          "tag": 11,
                                          "treeBaseDuration": 0,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "updateQueue": null,
                                        },
                                        "stateNode":     ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "button",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 5,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <div
                                      class="buttons"
                                    >
                                      <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>
                                          
                                      <a
                                        href="/"
                                      >
                                         Cancel 
                                      </a>
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "form",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 1,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "div",
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": Object {
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": Array [
                        Array [],
                        [Function],
                      ],
                      "_currentValue2": Array [
                        Array [],
                        [Function],
                      ],
                      "_threadCount": 0,
                    },
                    "next": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "observedBits": 1073741823,
                  },
                  "lanes": 0,
                  "responders": null,
                },
                "elementType": [Function],
                "firstEffect": null,
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "firstEffect": null,
            "flags": 0,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": null,
          "flags": 5,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "_isMounted": true,
            "_pendingLocation": null,
            "_reactInternalInstance": Object {},
            "_reactInternals": [Circular],
            "context": Object {},
            "props": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "flags": 5,
        "index": 0,
        "key": null,
        "lanes": 0,
        "lastEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 148,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 150,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 152,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useState",
                  "useContext",
                  "useContext",
                ],
                "_debugID": 154,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                  "lineNumber": 13,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 156,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                    "lineNumber": 124,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 158,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 125,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 161,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 126,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "img",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "img",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 159,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 134,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 164,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 135,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 166,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 136,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 173,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 137,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "br",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 174,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 138,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 180,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 181,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": "First name",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": "First name",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 182,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": First name,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "p",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 175,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 176,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 139,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 177,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "stateNode": <p>
                                 
                                First name
                                 
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <br />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "br",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 167,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 148,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 190,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 149,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 191,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 150,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 196,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 197,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "Last name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "Last name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 198,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": Last name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 192,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 151,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 193,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  Last name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 168,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 160,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 205,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 161,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 206,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 162,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 212,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 213,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Username",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Username",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 214,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Username,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 207,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 208,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 163,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 209,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="Username"
                                        name="Username"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Username
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 2,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 169,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 173,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 222,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 174,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 223,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 175,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 230,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 231,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Password",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Password",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 232,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Password,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 224,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 176,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 225,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 226,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 185,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "br",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {},
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {},
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 227,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 5,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(at least 6 character)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(at least 6 character)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (at least 6 character),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <br />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "br",
                                          "updateQueue": null,
                                        },
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Password
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 3,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 170,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 189,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 4,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 171,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 190,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 242,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 191,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "button",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 243,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "    ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "    ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 244,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 199,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 248,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 250,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 252,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": "a",
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": <a
                                                  href="/"
                                                >
                                                   Cancel 
                                                </a>,
                                                "tag": 5,
                                                "treeBaseDuration": 0,
                                                "type": "a",
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": Object {
                                              "firstContext": Object {
                                                "context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": [Circular],
                                                  },
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                                "next": null,
                                                "observedBits": 1073741823,
                                              },
                                              "lanes": 0,
                                              "responders": null,
                                            },
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": [Function],
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": [Function],
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 9,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "firstEffect": null,
                                          "flags": 1,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": null,
                                          "tag": 11,
                                          "treeBaseDuration": 0,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "updateQueue": null,
                                        },
                                        "stateNode":     ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "button",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 5,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <div
                                      class="buttons"
                                    >
                                      <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>
                                          
                                      <a
                                        href="/"
                                      >
                                         Cancel 
                                      </a>
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "form",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 1,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "div",
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": Object {
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": Array [
                        Array [],
                        [Function],
                      ],
                      "_currentValue2": Array [
                        Array [],
                        [Function],
                      ],
                      "_threadCount": 0,
                    },
                    "next": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "observedBits": 1073741823,
                  },
                  "lanes": 0,
                  "responders": null,
                },
                "elementType": [Function],
                "firstEffect": null,
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "firstEffect": null,
            "flags": 0,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": null,
          "flags": 5,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "_isMounted": true,
            "_pendingLocation": null,
            "_reactInternalInstance": Object {},
            "_reactInternals": [Circular],
            "context": Object {},
            "props": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "memoizedProps": Object {
          "children": <SignUP />,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <SignUP />,
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 144,
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 148,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 150,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 152,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useState",
                    "useContext",
                    "useContext",
                  ],
                  "_debugID": 154,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                    "lineNumber": 13,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 156,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 124,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 158,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 125,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 161,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 126,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "img",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 159,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 134,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 164,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 135,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 166,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 136,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 173,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 137,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 174,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 138,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 180,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 181,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "First name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "First name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 182,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": First name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 175,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 176,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 139,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 177,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="FirstName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  First name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 167,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 148,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 190,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 149,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 191,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 150,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 196,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 197,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Last name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Last name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 198,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Last name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 192,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 151,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 193,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 160,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 205,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 161,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 206,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 162,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 212,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 213,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Username",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Username",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 214,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Username,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 207,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 208,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 163,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 209,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="Username"
                                          name="Username"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Username
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 173,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 222,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 174,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 223,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 175,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 230,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 231,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Password",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Password",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 232,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Password,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 224,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 176,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 225,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 226,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 185,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "br",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {},
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {},
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 227,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 5,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(at least 6 character)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(at least 6 character)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (at least 6 character),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <br />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "br",
                                            "updateQueue": null,
                                          },
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Password
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 170,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 189,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 171,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 190,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 242,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 191,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "button",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 243,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "    ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "    ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 244,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 199,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 248,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 250,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 252,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": "a",
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": <a
                                                    href="/"
                                                  >
                                                     Cancel 
                                                  </a>,
                                                  "tag": 5,
                                                  "treeBaseDuration": 0,
                                                  "type": "a",
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": Object {
                                                "firstContext": Object {
                                                  "context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "_calculateChangedBits": null,
                                                      "_context": [Circular],
                                                    },
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                  "next": null,
                                                  "observedBits": 1073741823,
                                                },
                                                "lanes": 0,
                                                "responders": null,
                                              },
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 9,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 11,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "updateQueue": null,
                                          },
                                          "stateNode":     ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "button",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 5,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="buttons"
                                      >
                                        <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>
                                            
                                        <a
                                          href="/"
                                        >
                                           Cancel 
                                        </a>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autocomplete="password"
                                      name="Password"
                                      required=""
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "form",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 1,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": Object {
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Array [
                          Array [],
                          [Function],
                        ],
                        "_currentValue2": Array [
                          Array [],
                          [Function],
                        ],
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router-History",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "lanes": 0,
                    "responders": null,
                  },
                  "elementType": [Function],
                  "firstEffect": null,
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": null,
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "flags": 1,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <SignUP />,
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <SignUP />,
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <SignUP />,
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 141,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 141,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childLanes": 0,
              "dependencies": null,
              "elementType": null,
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 1,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "_debugRootType": "createLegacyRoot()",
                "callbackNode": null,
                "callbackPriority": 0,
                "containerInfo": <div>
                  <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "entangledLanes": 0,
                "entanglements": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "eventTimes": Array [
                  -1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "expirationTimes": Array [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                ],
                "expiredLanes": 0,
                "finishedLanes": 0,
                "finishedWork": null,
                "hydrate": false,
                "interactionThreadID": 18,
                "memoizedInteractions": Set {},
                "mutableReadLanes": 0,
                "mutableSourceEagerHydrationData": null,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pendingLanes": 0,
                "pingCache": null,
                "pingedLanes": 0,
                "suspendedLanes": 0,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": Object {
                  "callback": null,
                  "eventTime": 4158.6029,
                  "lane": 1,
                  "next": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastBaseUpdate": Object {
                  "callback": null,
                  "eventTime": 4158.6029,
                  "lane": 1,
                  "next": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "child": [Circular],
            "childLanes": 0,
            "dependencies": null,
            "elementType": null,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 148,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 150,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 152,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": Array [
                      "useState",
                      "useState",
                      "useState",
                      "useState",
                      "useContext",
                      "useContext",
                    ],
                    "_debugID": 154,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                      "lineNumber": 13,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 156,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 124,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 158,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 125,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 161,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 126,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "img",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 159,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 134,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 164,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 135,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 166,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 136,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 173,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 137,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 174,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 138,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 180,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 181,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "First name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "First name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 182,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": First name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 175,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 176,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 139,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 177,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="FirstName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    First name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 167,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 148,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 190,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 149,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 191,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 150,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 196,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 197,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Last name",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Last name",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 198,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Last name,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 192,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 151,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 193,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="LastName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 168,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 160,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 205,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 161,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 206,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 162,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 212,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 213,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Username",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Username",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 214,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Username,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 207,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 208,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 163,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 209,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="Username"
                                            name="Username"
                                            required=""
                                            type="text"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Username
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 169,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 173,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 222,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 174,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 223,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 175,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 230,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 231,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "Password",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "Password",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 232,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": " ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": " ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode":  ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": Password,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "p",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 224,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 176,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 225,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 3,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 226,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 185,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": "br",
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 4,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {},
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {},
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 227,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": null,
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": null,
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 5,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": "(at least 6 character)",
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": "(at least 6 character)",
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": (at least 6 character),
                                                "tag": 6,
                                                "treeBaseDuration": 0,
                                                "type": null,
                                                "updateQueue": null,
                                              },
                                              "stateNode": <br />,
                                              "tag": 5,
                                              "treeBaseDuration": 0,
                                              "type": "br",
                                              "updateQueue": null,
                                            },
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="password"
                                            name="Password"
                                            required=""
                                            type="password"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <p>
                                           
                                          Password
                                           
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 170,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 189,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 171,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 190,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 242,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 191,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "button",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 243,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "    ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "    ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 244,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 199,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 248,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 250,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": FiberNode {
                                                    "_debugHookTypes": null,
                                                    "_debugID": 252,
                                                    "_debugNeedsRemount": false,
                                                    "_debugOwner": [Circular],
                                                    "_debugSource": null,
                                                    "actualDuration": 0,
                                                    "actualStartTime": -1,
                                                    "alternate": null,
                                                    "child": null,
                                                    "childLanes": 0,
                                                    "dependencies": null,
                                                    "elementType": "a",
                                                    "firstEffect": null,
                                                    "flags": 0,
                                                    "index": 0,
                                                    "key": null,
                                                    "lanes": 0,
                                                    "lastEffect": null,
                                                    "memoizedProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "memoizedState": null,
                                                    "mode": 0,
                                                    "nextEffect": null,
                                                    "pendingProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "ref": null,
                                                    "return": [Circular],
                                                    "selfBaseDuration": 0,
                                                    "sibling": null,
                                                    "stateNode": <a
                                                      href="/"
                                                    >
                                                       Cancel 
                                                    </a>,
                                                    "tag": 5,
                                                    "treeBaseDuration": 0,
                                                    "type": "a",
                                                    "updateQueue": null,
                                                  },
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "firstEffect": null,
                                                  "flags": 1,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": null,
                                                  "tag": 11,
                                                  "treeBaseDuration": 0,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": Object {
                                                  "firstContext": Object {
                                                    "context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                    "next": null,
                                                    "observedBits": 1073741823,
                                                  },
                                                  "lanes": 0,
                                                  "responders": null,
                                                },
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 9,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "stateNode":     ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "button",
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "div",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 5,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <div
                                          class="buttons"
                                        >
                                          <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>
                                              
                                          <a
                                            href="/"
                                          >
                                             Cancel 
                                          </a>
                                        </div>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "div",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <div
                                      class="fields"
                                    >
                                      <br />
                                      <p>
                                         
                                        Password
                                         
                                      </p>
                                      <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />
                                      (*)
                                      <br />
                                      (at least 6 character)
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autocomplete="Username"
                                      name="Username"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "form",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": Object {
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": null,
                          "_currentRenderer2": null,
                          "_currentValue": Array [
                            Array [],
                            [Function],
                          ],
                          "_currentValue2": Array [
                            Array [],
                            [Function],
                          ],
                          "_threadCount": 0,
                        },
                        "next": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router-History",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "observedBits": 1073741823,
                      },
                      "lanes": 0,
                      "responders": null,
                    },
                    "elementType": [Function],
                    "firstEffect": null,
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": Object {
                            "baseQueue": null,
                            "baseState": "",
                            "memoizedState": "",
                            "next": null,
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": "",
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": null,
              "flags": 5,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Router {
                "_isMounted": true,
                "_pendingLocation": null,
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "unlisten": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "flags": 256,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <SignUP />,
                  }
                }
                refProp={null}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": FiberRootNode {
              "_debugRootType": "createLegacyRoot()",
              "callbackNode": null,
              "callbackPriority": 0,
              "containerInfo": <div>
                <div
                  class="Login"
                >
                  <div
                    class="loginImage"
                  >
                    <img
                      alt="login"
                      height="175"
                      src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                      style="position: relative; padding-top: 10px;"
                      width="240"
                    />
                  </div>
                  <form>
                    <div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          First name
                           
                        </p>
                         
                        <input
                          name="FirstName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Last name
                           
                        </p>
                        <input
                          name="LastName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Username
                           
                        </p>
                         
                        <input
                          autocomplete="Username"
                          name="Username"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Password
                           
                        </p>
                        <input
                          autocomplete="password"
                          name="Password"
                          required=""
                          type="password"
                          value=""
                        />
                        (*)
                        <br />
                        (at least 6 character)
                      </div>
                      <br />
                      <div
                        class="buttons"
                      >
                        <button
                          class="btn btn-primary"
                          type="button"
                        >
                          Register
                        </button>
                            
                        <a
                          href="/"
                        >
                           Cancel 
                        </a>
                      </div>
                    </div>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "entangledLanes": 0,
              "entanglements": Array [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "eventTimes": Array [
                -1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "expirationTimes": Array [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
              ],
              "expiredLanes": 0,
              "finishedLanes": 0,
              "finishedWork": null,
              "hydrate": false,
              "interactionThreadID": 18,
              "memoizedInteractions": Set {},
              "mutableReadLanes": 0,
              "mutableSourceEagerHydrationData": null,
              "pendingChildren": null,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pendingLanes": 0,
              "pingCache": null,
              "pingedLanes": 0,
              "suspendedLanes": 0,
              "tag": 0,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <SignUP />,
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalInstance": Object {},
            "_reactInternals": [Circular],
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <SignUP />,
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <SignUP />,
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <SignUP />,
              },
              "wrappingComponentProps": null,
            },
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseState": null,
          "effects": null,
          "firstBaseUpdate": null,
          "lastBaseUpdate": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "context": Object {},
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "props": Object {
        "children": <SignUP />,
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <SignUP />,
    },
    "ref": null,
    "rendered": Object {
      "instance": Router {
        "_isMounted": true,
        "_pendingLocation": null,
        "_reactInternalInstance": Object {},
        "_reactInternals": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 148,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 146,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 144,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": [Circular],
              "flags": 1,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 141,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 1,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "lastBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": null,
                "firstEffect": [Circular],
                "flags": 256,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <SignUP />,
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "createLegacyRoot()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": <div>
                    <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "entangledLanes": 0,
                  "entanglements": Array [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": Array [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": Array [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "hydrate": false,
                  "interactionThreadID": 18,
                  "memoizedInteractions": Set {},
                  "mutableReadLanes": 0,
                  "mutableSourceEagerHydrationData": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": [Circular],
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <SignUP />,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 144,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": [Circular],
              "flags": 1,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 141,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 1,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "lastBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": null,
                "firstEffect": [Circular],
                "flags": 256,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <SignUP />,
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "createLegacyRoot()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": <div>
                    <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "entangledLanes": 0,
                  "entanglements": Array [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": Array [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": Array [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "hydrate": false,
                  "interactionThreadID": 18,
                  "memoizedInteractions": Set {},
                  "mutableReadLanes": 0,
                  "mutableSourceEagerHydrationData": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <SignUP />,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": null,
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 150,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 152,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useState",
                  "useContext",
                  "useContext",
                ],
                "_debugID": 154,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                  "lineNumber": 13,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 156,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                    "lineNumber": 124,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 158,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 125,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 161,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 126,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "img",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "login",
                        "height": "175",
                        "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                        "style": Object {
                          "paddingTop": 10,
                          "position": "relative",
                        },
                        "width": "240",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "img",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style={
                          Object {
                            "paddingTop": 10,
                            "position": "relative",
                          }
                        }
                        width="240"
                      />,
                      "className": "loginImage",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 159,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 134,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 164,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 135,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 166,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 136,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 173,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 137,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "br",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 174,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 138,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 180,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 181,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": "First name",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": "First name",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 182,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": First name,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "p",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  " ",
                                  "First name",
                                  " ",
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 175,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": null,
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 176,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 139,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "FirstName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 177,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "stateNode": <p>
                                 
                                First name
                                 
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <br />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "br",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <br />,
                              <p>
                                 
                                First name
                                 
                              </p>,
                              " ",
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />,
                              "(*)",
                            ],
                            "className": "fields",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 167,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 148,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 190,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 149,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 191,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 150,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 196,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 197,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "Last name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "Last name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 198,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": Last name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "Last name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 192,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 151,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "input",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "name": "LastName",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 193,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "(*)",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "(*)",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": (*),
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  Last name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  Last name
                                   
                                </p>,
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 168,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 160,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 205,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 161,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 206,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 162,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 212,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 213,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Username",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Username",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 214,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Username,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Username",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 207,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 208,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 163,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "Username",
                                        "name": "Username",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 209,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="Username"
                                        name="Username"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Username
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 2,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Username
                                     
                                  </p>,
                                  " ",
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 169,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 173,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 222,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 174,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 223,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 175,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 230,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 231,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Password",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Password",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 232,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Password,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Password",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 224,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 176,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "autoComplete": "password",
                                        "name": "Password",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "password",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 225,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 226,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 185,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "br",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {},
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {},
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 227,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 5,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(at least 6 character)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(at least 6 character)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (at least 6 character),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <br />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "br",
                                          "updateQueue": null,
                                        },
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Password
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 3,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Password
                                       
                                    </p>,
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />,
                                    "(*)",
                                    <br />,
                                    "(at least 6 character)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 170,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 189,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 4,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 171,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 190,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 242,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 191,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "button",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "Register",
                                        "className": "btn btn-primary",
                                        "onClick": [Function],
                                        "type": "button",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 243,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "    ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "    ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 244,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 199,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 248,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 250,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 252,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": "a",
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "onClick": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": <a
                                                  href="/"
                                                >
                                                   Cancel 
                                                </a>,
                                                "tag": 5,
                                                "treeBaseDuration": 0,
                                                "type": "a",
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "href": "/",
                                                "navigate": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": Object {
                                              "firstContext": Object {
                                                "context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": [Circular],
                                                  },
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                                "next": null,
                                                "observedBits": 1073741823,
                                              },
                                              "lanes": 0,
                                              "responders": null,
                                            },
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": [Function],
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": [Function],
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 9,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": Object {
                                                "$$typeof": Symbol(react.context),
                                                "Consumer": [Circular],
                                                "Provider": Object {
                                                  "$$typeof": Symbol(react.provider),
                                                  "_context": [Circular],
                                                },
                                                "_calculateChangedBits": null,
                                                "_currentRenderer": Object {},
                                                "_currentRenderer2": null,
                                                "_currentValue": undefined,
                                                "_currentValue2": undefined,
                                                "_threadCount": 0,
                                                "displayName": "Router",
                                              },
                                            },
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "firstEffect": null,
                                          "flags": 1,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": " Cancel ",
                                            "to": "/",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": null,
                                          "tag": 11,
                                          "treeBaseDuration": 0,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "updateQueue": null,
                                        },
                                        "stateNode":     ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "button",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 5,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <button
                                          className="btn btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "    ",
                                        <ForwardRef(Link)
                                          to="/"
                                        >
                                           Cancel 
                                        </ForwardRef(Link)>,
                                      ],
                                      "className": "buttons",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <div
                                      class="buttons"
                                    >
                                      <button
                                        class="btn btn-primary"
                                        type="button"
                                      >
                                        Register
                                      </button>
                                          
                                      <a
                                        href="/"
                                      >
                                         Cancel 
                                      </a>
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>,
                            <br />,
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "form",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 1,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "div",
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />
                      </div>,
                      <form
                        onSubmit={[Function]}
                      >
                        <div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            className="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            className="buttons"
                          >
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>
                                
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>
                          </div>
                        </div>
                      </form>,
                    ],
                    "className": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": Object {
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": Array [
                        Array [],
                        [Function],
                      ],
                      "_currentValue2": Array [
                        Array [],
                        [Function],
                      ],
                      "_threadCount": 0,
                    },
                    "next": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "observedBits": 1073741823,
                  },
                  "lanes": 0,
                  "responders": null,
                },
                "elementType": [Function],
                "firstEffect": null,
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "value": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router-History",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "firstEffect": null,
            "flags": 0,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Context.Provider
                value={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <SignUP />
              </Context.Provider>,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": null,
          "flags": 5,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 146,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 144,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": [Circular],
              "flags": 1,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 141,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 1,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "lastBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": null,
                "firstEffect": [Circular],
                "flags": 256,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <SignUP />,
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "createLegacyRoot()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": <div>
                    <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "entangledLanes": 0,
                  "entanglements": Array [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": Array [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": Array [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "hydrate": false,
                  "interactionThreadID": 18,
                  "memoizedInteractions": Set {},
                  "mutableReadLanes": 0,
                  "mutableSourceEagerHydrationData": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": [Circular],
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <SignUP />,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 144,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": [Circular],
              "flags": 1,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 141,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 1,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "lastBaseUpdate": Object {
                      "callback": null,
                      "eventTime": 4158.6029,
                      "lane": 1,
                      "next": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <SignUP />,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "tag": 0,
                    },
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": null,
                "firstEffect": [Circular],
                "flags": 256,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <SignUP />,
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "createLegacyRoot()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": <div>
                    <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "entangledLanes": 0,
                  "entanglements": Array [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": Array [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": Array [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "hydrate": false,
                  "interactionThreadID": 18,
                  "memoizedInteractions": Set {},
                  "mutableReadLanes": 0,
                  "mutableSourceEagerHydrationData": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <SignUP />,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": null,
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "context": Object {},
        "props": Object {
          "children": <SignUP />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "refs": Object {},
        "state": Object {
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        },
        "unlisten": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <SignUP />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="Login"
          >
            <div
              class="loginImage"
            >
              <img
                alt="login"
                height="175"
                src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                style="position: relative; padding-top: 10px;"
                width="240"
              />
            </div>
            <form>
              <div>
                <div
                  class="fields"
                >
                  <br />
                  <p>
                     
                    First name
                     
                  </p>
                   
                  <input
                    name="FirstName"
                    required=""
                    type="text"
                    value=""
                  />
                  (*)
                </div>
                <div
                  class="fields"
                >
                  <br />
                  <p>
                     
                    Last name
                     
                  </p>
                  <input
                    name="LastName"
                    required=""
                    type="text"
                    value=""
                  />
                  (*)
                </div>
                <div
                  class="fields"
                >
                  <br />
                  <p>
                     
                    Username
                     
                  </p>
                   
                  <input
                    autocomplete="Username"
                    name="Username"
                    required=""
                    type="text"
                    value=""
                  />
                  (*)
                </div>
                <div
                  class="fields"
                >
                  <br />
                  <p>
                     
                    Password
                     
                  </p>
                  <input
                    autocomplete="password"
                    name="Password"
                    required=""
                    type="password"
                    value=""
                  />
                  (*)
                  <br />
                  (at least 6 character)
                </div>
                <br />
                <div
                  class="buttons"
                >
                  <button
                    class="btn btn-primary"
                    type="button"
                  >
                    Register
                  </button>
                      
                  <a
                    href="/"
                  >
                     Cancel 
                  </a>
                </div>
              </div>
            </form>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="loginImage"
              >
                <img
                  alt="login"
                  height="175"
                  src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                  style={
                    Object {
                      "paddingTop": 10,
                      "position": "relative",
                    }
                  }
                  width="240"
                />
              </div>,
              <form
                onSubmit={[Function]}
              >
                <div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      First name
                       
                    </p>
                     
                    <input
                      name="FirstName"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      Last name
                       
                    </p>
                    <input
                      name="LastName"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      Username
                       
                    </p>
                     
                    <input
                      autoComplete="Username"
                      name="Username"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      Password
                       
                    </p>
                    <input
                      autoComplete="password"
                      name="Password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                      value=""
                    />
                    (*)
                    <br />
                    (at least 6 character)
                  </div>
                  <br />
                  <div
                    className="buttons"
                  >
                    <button
                      className="btn btn-primary"
                      onClick={[Function]}
                      type="button"
                    >
                      Register
                    </button>
                        
                    <ForwardRef(Link)
                      to="/"
                    >
                       Cancel 
                    </ForwardRef(Link)>
                  </div>
                </div>
              </form>,
            ],
            "className": "Login",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="loginImage"
              >
                <img
                  alt="login"
                  height="175"
                  src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                  style="position: relative; padding-top: 10px;"
                  width="240"
                />
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="login"
                  height="175"
                  src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                  style={
                    Object {
                      "paddingTop": 10,
                      "position": "relative",
                    }
                  }
                  width="240"
                />,
                "className": "loginImage",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <img
                    alt="login"
                    height="175"
                    src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                    style="position: relative; padding-top: 10px;"
                    width="240"
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "login",
                    "height": "175",
                    "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                    "style": Object {
                      "paddingTop": 10,
                      "position": "relative",
                    },
                    "width": "240",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "img",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <form>
                <div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      First name
                       
                    </p>
                     
                    <input
                      name="FirstName"
                      required=""
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      Last name
                       
                    </p>
                    <input
                      name="LastName"
                      required=""
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      Username
                       
                    </p>
                     
                    <input
                      autocomplete="Username"
                      name="Username"
                      required=""
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      Password
                       
                    </p>
                    <input
                      autocomplete="password"
                      name="Password"
                      required=""
                      type="password"
                      value=""
                    />
                    (*)
                    <br />
                    (at least 6 character)
                  </div>
                  <br />
                  <div
                    class="buttons"
                  >
                    <button
                      class="btn btn-primary"
                      type="button"
                    >
                      Register
                    </button>
                        
                    <a
                      href="/"
                    >
                       Cancel 
                    </a>
                  </div>
                </div>
              </form>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      First name
                       
                    </p>
                     
                    <input
                      name="FirstName"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      Last name
                       
                    </p>
                    <input
                      name="LastName"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      Username
                       
                    </p>
                     
                    <input
                      autoComplete="Username"
                      name="Username"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    className="fields"
                  >
                    <br />
                    <p>
                       
                      Password
                       
                    </p>
                    <input
                      autoComplete="password"
                      name="Password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                      value=""
                    />
                    (*)
                    <br />
                    (at least 6 character)
                  </div>
                  <br />
                  <div
                    className="buttons"
                  >
                    <button
                      className="btn btn-primary"
                      onClick={[Function]}
                      type="button"
                    >
                      Register
                    </button>
                        
                    <ForwardRef(Link)
                      to="/"
                    >
                       Cancel 
                    </ForwardRef(Link)>
                  </div>
                </div>,
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        First name
                         
                      </p>
                       
                      <input
                        name="FirstName"
                        required=""
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        Last name
                         
                      </p>
                      <input
                        name="LastName"
                        required=""
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        Username
                         
                      </p>
                       
                      <input
                        autocomplete="Username"
                        name="Username"
                        required=""
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        Password
                         
                      </p>
                      <input
                        autocomplete="password"
                        name="Password"
                        required=""
                        type="password"
                        value=""
                      />
                      (*)
                      <br />
                      (at least 6 character)
                    </div>
                    <br />
                    <div
                      class="buttons"
                    >
                      <button
                        class="btn btn-primary"
                        type="button"
                      >
                        Register
                      </button>
                          
                      <a
                        href="/"
                      >
                         Cancel 
                      </a>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="fields"
                      >
                        <br />
                        <p>
                           
                          First name
                           
                        </p>
                         
                        <input
                          name="FirstName"
                          onChange={[Function]}
                          required={true}
                          type="text"
                          value=""
                        />
                        (*)
                      </div>,
                      <div
                        className="fields"
                      >
                        <br />
                        <p>
                           
                          Last name
                           
                        </p>
                        <input
                          name="LastName"
                          onChange={[Function]}
                          required={true}
                          type="text"
                          value=""
                        />
                        (*)
                      </div>,
                      <div
                        className="fields"
                      >
                        <br />
                        <p>
                           
                          Username
                           
                        </p>
                         
                        <input
                          autoComplete="Username"
                          name="Username"
                          onChange={[Function]}
                          required={true}
                          type="text"
                          value=""
                        />
                        (*)
                      </div>,
                      <div
                        className="fields"
                      >
                        <br />
                        <p>
                           
                          Password
                           
                        </p>
                        <input
                          autoComplete="password"
                          name="Password"
                          onChange={[Function]}
                          required={true}
                          type="password"
                          value=""
                        />
                        (*)
                        <br />
                        (at least 6 character)
                      </div>,
                      <br />,
                      <div
                        className="buttons"
                      >
                        <button
                          className="btn btn-primary"
                          onClick={[Function]}
                          type="button"
                        >
                          Register
                        </button>
                            
                        <ForwardRef(Link)
                          to="/"
                        >
                           Cancel 
                        </ForwardRef(Link)>
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          First name
                           
                        </p>
                         
                        <input
                          name="FirstName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <br />,
                          <p>
                             
                            First name
                             
                          </p>,
                          " ",
                          <input
                            name="FirstName"
                            onChange={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />,
                          "(*)",
                        ],
                        "className": "fields",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <br />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "br",
                        },
                        Object {
                          "instance": <p>
                             
                            First name
                             
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              " ",
                              "First name",
                              " ",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            " ",
                            "First name",
                            " ",
                          ],
                          "type": "p",
                        },
                        " ",
                        Object {
                          "instance": <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "name": "FirstName",
                            "onChange": [Function],
                            "required": true,
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "input",
                        },
                        "(*)",
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Last name
                           
                        </p>
                        <input
                          name="LastName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <br />,
                          <p>
                             
                            Last name
                             
                          </p>,
                          <input
                            name="LastName"
                            onChange={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />,
                          "(*)",
                        ],
                        "className": "fields",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <br />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "br",
                        },
                        Object {
                          "instance": <p>
                             
                            Last name
                             
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              " ",
                              "Last name",
                              " ",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            " ",
                            "Last name",
                            " ",
                          ],
                          "type": "p",
                        },
                        Object {
                          "instance": <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "name": "LastName",
                            "onChange": [Function],
                            "required": true,
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "input",
                        },
                        "(*)",
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Username
                           
                        </p>
                         
                        <input
                          autocomplete="Username"
                          name="Username"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <br />,
                          <p>
                             
                            Username
                             
                          </p>,
                          " ",
                          <input
                            autoComplete="Username"
                            name="Username"
                            onChange={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />,
                          "(*)",
                        ],
                        "className": "fields",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <br />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "br",
                        },
                        Object {
                          "instance": <p>
                             
                            Username
                             
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              " ",
                              "Username",
                              " ",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            " ",
                            "Username",
                            " ",
                          ],
                          "type": "p",
                        },
                        " ",
                        Object {
                          "instance": <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "autoComplete": "Username",
                            "name": "Username",
                            "onChange": [Function],
                            "required": true,
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "input",
                        },
                        "(*)",
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Password
                           
                        </p>
                        <input
                          autocomplete="password"
                          name="Password"
                          required=""
                          type="password"
                          value=""
                        />
                        (*)
                        <br />
                        (at least 6 character)
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <br />,
                          <p>
                             
                            Password
                             
                          </p>,
                          <input
                            autoComplete="password"
                            name="Password"
                            onChange={[Function]}
                            required={true}
                            type="password"
                            value=""
                          />,
                          "(*)",
                          <br />,
                          "(at least 6 character)",
                        ],
                        "className": "fields",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <br />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "br",
                        },
                        Object {
                          "instance": <p>
                             
                            Password
                             
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              " ",
                              "Password",
                              " ",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            " ",
                            "Password",
                            " ",
                          ],
                          "type": "p",
                        },
                        Object {
                          "instance": <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "autoComplete": "password",
                            "name": "Password",
                            "onChange": [Function],
                            "required": true,
                            "type": "password",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "input",
                        },
                        "(*)",
                        Object {
                          "instance": <br />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "br",
                        },
                        "(at least 6 character)",
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <br />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "br",
                    },
                    Object {
                      "instance": <div
                        class="buttons"
                      >
                        <button
                          class="btn btn-primary"
                          type="button"
                        >
                          Register
                        </button>
                            
                        <a
                          href="/"
                        >
                           Cancel 
                        </a>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <button
                            className="btn btn-primary"
                            onClick={[Function]}
                            type="button"
                          >
                            Register
                          </button>,
                          "    ",
                          <ForwardRef(Link)
                            to="/"
                          >
                             Cancel 
                          </ForwardRef(Link)>,
                        ],
                        "className": "buttons",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Register",
                            "className": "btn btn-primary",
                            "onClick": [Function],
                            "type": "button",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Register",
                          ],
                          "type": "button",
                        },
                        "    ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": " Cancel ",
                            "to": "/",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": " Cancel ",
                              "href": "/",
                              "navigate": [Function],
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": <a
                                href="/"
                              >
                                 Cancel 
                              </a>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": " Cancel ",
                                "href": "/",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": Array [
                                " Cancel ",
                              ],
                              "type": "a",
                            },
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "innerRef": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          },
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": BrowserRouter {
        "_reactInternalInstance": Object {},
        "_reactInternals": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 146,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 144,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 148,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 150,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 152,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": Array [
                      "useState",
                      "useState",
                      "useState",
                      "useState",
                      "useContext",
                      "useContext",
                    ],
                    "_debugID": 154,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                      "lineNumber": 13,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 156,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 124,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 158,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 125,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 161,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 126,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "img",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 159,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 134,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 164,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 135,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 166,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 136,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 173,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 137,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 174,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 138,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 180,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 181,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "First name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "First name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 182,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": First name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 175,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 176,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 139,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 177,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="FirstName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    First name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 167,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 148,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 190,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 149,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 191,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 150,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 196,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 197,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Last name",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Last name",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 198,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Last name,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 192,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 151,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 193,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="LastName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 168,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 160,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 205,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 161,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 206,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 162,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 212,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 213,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Username",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Username",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 214,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Username,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 207,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 208,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 163,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 209,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="Username"
                                            name="Username"
                                            required=""
                                            type="text"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Username
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 169,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 173,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 222,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 174,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 223,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 175,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 230,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 231,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "Password",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "Password",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 232,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": " ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": " ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode":  ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": Password,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "p",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 224,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 176,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 225,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 3,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 226,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 185,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": "br",
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 4,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {},
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {},
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 227,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": null,
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": null,
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 5,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": "(at least 6 character)",
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": "(at least 6 character)",
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": (at least 6 character),
                                                "tag": 6,
                                                "treeBaseDuration": 0,
                                                "type": null,
                                                "updateQueue": null,
                                              },
                                              "stateNode": <br />,
                                              "tag": 5,
                                              "treeBaseDuration": 0,
                                              "type": "br",
                                              "updateQueue": null,
                                            },
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="password"
                                            name="Password"
                                            required=""
                                            type="password"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <p>
                                           
                                          Password
                                           
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 170,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 189,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 171,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 190,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 242,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 191,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "button",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 243,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "    ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "    ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 244,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 199,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 248,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 250,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": FiberNode {
                                                    "_debugHookTypes": null,
                                                    "_debugID": 252,
                                                    "_debugNeedsRemount": false,
                                                    "_debugOwner": [Circular],
                                                    "_debugSource": null,
                                                    "actualDuration": 0,
                                                    "actualStartTime": -1,
                                                    "alternate": null,
                                                    "child": null,
                                                    "childLanes": 0,
                                                    "dependencies": null,
                                                    "elementType": "a",
                                                    "firstEffect": null,
                                                    "flags": 0,
                                                    "index": 0,
                                                    "key": null,
                                                    "lanes": 0,
                                                    "lastEffect": null,
                                                    "memoizedProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "memoizedState": null,
                                                    "mode": 0,
                                                    "nextEffect": null,
                                                    "pendingProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "ref": null,
                                                    "return": [Circular],
                                                    "selfBaseDuration": 0,
                                                    "sibling": null,
                                                    "stateNode": <a
                                                      href="/"
                                                    >
                                                       Cancel 
                                                    </a>,
                                                    "tag": 5,
                                                    "treeBaseDuration": 0,
                                                    "type": "a",
                                                    "updateQueue": null,
                                                  },
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "firstEffect": null,
                                                  "flags": 1,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": null,
                                                  "tag": 11,
                                                  "treeBaseDuration": 0,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": Object {
                                                  "firstContext": Object {
                                                    "context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                    "next": null,
                                                    "observedBits": 1073741823,
                                                  },
                                                  "lanes": 0,
                                                  "responders": null,
                                                },
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 9,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "stateNode":     ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "button",
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "div",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 5,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <div
                                          class="buttons"
                                        >
                                          <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>
                                              
                                          <a
                                            href="/"
                                          >
                                             Cancel 
                                          </a>
                                        </div>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "div",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <div
                                      class="fields"
                                    >
                                      <br />
                                      <p>
                                         
                                        Password
                                         
                                      </p>
                                      <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />
                                      (*)
                                      <br />
                                      (at least 6 character)
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autocomplete="Username"
                                      name="Username"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "form",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": Object {
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": null,
                          "_currentRenderer2": null,
                          "_currentValue": Array [
                            Array [],
                            [Function],
                          ],
                          "_currentValue2": Array [
                            Array [],
                            [Function],
                          ],
                          "_threadCount": 0,
                        },
                        "next": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router-History",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "observedBits": 1073741823,
                      },
                      "lanes": 0,
                      "responders": null,
                    },
                    "elementType": [Function],
                    "firstEffect": null,
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": Object {
                            "baseQueue": null,
                            "baseState": "",
                            "memoizedState": "",
                            "next": null,
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": "",
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": null,
              "flags": 5,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Router {
                "_isMounted": true,
                "_pendingLocation": null,
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "unlisten": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "flags": 1,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <SignUP />,
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <SignUP />,
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <SignUP />,
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 141,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 141,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childLanes": 0,
                "dependencies": null,
                "elementType": null,
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 1,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "createLegacyRoot()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": <div>
                    <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "entangledLanes": 0,
                  "entanglements": Array [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": Array [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": Array [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "hydrate": false,
                  "interactionThreadID": 18,
                  "memoizedInteractions": Set {},
                  "mutableReadLanes": 0,
                  "mutableSourceEagerHydrationData": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "effects": null,
                  "firstBaseUpdate": Object {
                    "callback": null,
                    "eventTime": 4158.6029,
                    "lane": 1,
                    "next": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastBaseUpdate": Object {
                    "callback": null,
                    "eventTime": 4158.6029,
                    "lane": 1,
                    "next": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": null,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 148,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 150,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 152,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": Array [
                        "useState",
                        "useState",
                        "useState",
                        "useState",
                        "useContext",
                        "useContext",
                      ],
                      "_debugID": 154,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                        "lineNumber": 13,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 156,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 124,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 158,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 125,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 161,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 126,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "img",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "alt": "login",
                              "height": "175",
                              "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                              "style": Object {
                                "paddingTop": 10,
                                "position": "relative",
                              },
                              "width": "240",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "alt": "login",
                              "height": "175",
                              "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                              "style": Object {
                                "paddingTop": 10,
                                "position": "relative",
                              },
                              "width": "240",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "img",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />,
                            "className": "loginImage",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />,
                            "className": "loginImage",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 159,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 134,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 164,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 135,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 166,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 136,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 173,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 137,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 174,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 138,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 180,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 181,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "First name",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "First name",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 182,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": First name,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "First name",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "First name",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 175,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 176,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 139,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "name": "FirstName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "name": "FirstName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 177,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          name="FirstName"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      First name
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      First name
                                       
                                    </p>,
                                    " ",
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      First name
                                       
                                    </p>,
                                    " ",
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 167,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 148,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 190,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 149,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 191,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 150,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 196,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 197,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Last name",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Last name",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 198,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Last name,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Last name",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Last name",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 192,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 151,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "name": "LastName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "name": "LastName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 193,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          name="LastName"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Last name
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Last name
                                         
                                      </p>,
                                      <input
                                        name="LastName"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Last name
                                         
                                      </p>,
                                      <input
                                        name="LastName"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 168,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 160,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 205,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 161,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 206,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 162,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 212,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 213,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "Username",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "Username",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 214,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": " ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": " ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode":  ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": Username,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "p",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            " ",
                                            "Username",
                                            " ",
                                          ],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            " ",
                                            "Username",
                                            " ",
                                          ],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 207,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 208,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 163,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "input",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 3,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "autoComplete": "Username",
                                              "name": "Username",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "text",
                                              "value": "",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "autoComplete": "Username",
                                              "name": "Username",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "text",
                                              "value": "",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 209,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 4,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(*)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(*)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (*),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <input
                                              autocomplete="Username"
                                              name="Username"
                                              required=""
                                              type="text"
                                              value=""
                                            />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "input",
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <p>
                                           
                                          Username
                                           
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Username
                                           
                                        </p>,
                                        " ",
                                        <input
                                          autoComplete="Username"
                                          name="Username"
                                          onChange={[Function]}
                                          required={true}
                                          type="text"
                                          value=""
                                        />,
                                        "(*)",
                                      ],
                                      "className": "fields",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Username
                                           
                                        </p>,
                                        " ",
                                        <input
                                          autoComplete="Username"
                                          name="Username"
                                          onChange={[Function]}
                                          required={true}
                                          type="text"
                                          value=""
                                        />,
                                        "(*)",
                                      ],
                                      "className": "fields",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 169,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 173,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 222,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 174,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "br",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {},
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {},
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 223,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 175,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 230,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 231,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 1,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "Password",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "Password",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 232,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": null,
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": null,
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 2,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": " ",
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": " ",
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode":  ,
                                                "tag": 6,
                                                "treeBaseDuration": 0,
                                                "type": null,
                                                "updateQueue": null,
                                              },
                                              "stateNode": Password,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "p",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": Array [
                                              " ",
                                              "Password",
                                              " ",
                                            ],
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": Array [
                                              " ",
                                              "Password",
                                              " ",
                                            ],
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 224,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 176,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "input",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "autoComplete": "password",
                                              "name": "Password",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "password",
                                              "value": "",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "autoComplete": "password",
                                              "name": "Password",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "password",
                                              "value": "",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 225,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 3,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(*)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(*)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 226,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": Object {
                                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                  "lineNumber": 185,
                                                },
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": "br",
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 4,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {},
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {},
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 227,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": null,
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": null,
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 5,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": "(at least 6 character)",
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": "(at least 6 character)",
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": (at least 6 character),
                                                  "tag": 6,
                                                  "treeBaseDuration": 0,
                                                  "type": null,
                                                  "updateQueue": null,
                                                },
                                                "stateNode": <br />,
                                                "tag": 5,
                                                "treeBaseDuration": 0,
                                                "type": "br",
                                                "updateQueue": null,
                                              },
                                              "stateNode": (*),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <input
                                              autocomplete="password"
                                              name="Password"
                                              required=""
                                              type="password"
                                              value=""
                                            />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "input",
                                            "updateQueue": null,
                                          },
                                          "stateNode": <p>
                                             
                                            Password
                                             
                                          </p>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "p",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <br />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "br",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <br />,
                                          <p>
                                             
                                            Password
                                             
                                          </p>,
                                          <input
                                            autoComplete="password"
                                            name="Password"
                                            onChange={[Function]}
                                            required={true}
                                            type="password"
                                            value=""
                                          />,
                                          "(*)",
                                          <br />,
                                          "(at least 6 character)",
                                        ],
                                        "className": "fields",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <br />,
                                          <p>
                                             
                                            Password
                                             
                                          </p>,
                                          <input
                                            autoComplete="password"
                                            name="Password"
                                            onChange={[Function]}
                                            required={true}
                                            type="password"
                                            value=""
                                          />,
                                          "(*)",
                                          <br />,
                                          "(at least 6 character)",
                                        ],
                                        "className": "fields",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 170,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 189,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "br",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {},
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {},
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 171,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 190,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 242,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 191,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "button",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": "Register",
                                              "className": "btn btn-primary",
                                              "onClick": [Function],
                                              "type": "button",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": "Register",
                                              "className": "btn btn-primary",
                                              "onClick": [Function],
                                              "type": "button",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 243,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 1,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "    ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "    ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 244,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": Object {
                                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                  "lineNumber": 199,
                                                },
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 248,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": FiberNode {
                                                    "_debugHookTypes": null,
                                                    "_debugID": 250,
                                                    "_debugNeedsRemount": false,
                                                    "_debugOwner": [Circular],
                                                    "_debugSource": null,
                                                    "actualDuration": 0,
                                                    "actualStartTime": -1,
                                                    "alternate": null,
                                                    "child": FiberNode {
                                                      "_debugHookTypes": null,
                                                      "_debugID": 252,
                                                      "_debugNeedsRemount": false,
                                                      "_debugOwner": [Circular],
                                                      "_debugSource": null,
                                                      "actualDuration": 0,
                                                      "actualStartTime": -1,
                                                      "alternate": null,
                                                      "child": null,
                                                      "childLanes": 0,
                                                      "dependencies": null,
                                                      "elementType": "a",
                                                      "firstEffect": null,
                                                      "flags": 0,
                                                      "index": 0,
                                                      "key": null,
                                                      "lanes": 0,
                                                      "lastEffect": null,
                                                      "memoizedProps": Object {
                                                        "children": " Cancel ",
                                                        "href": "/",
                                                        "onClick": [Function],
                                                      },
                                                      "memoizedState": null,
                                                      "mode": 0,
                                                      "nextEffect": null,
                                                      "pendingProps": Object {
                                                        "children": " Cancel ",
                                                        "href": "/",
                                                        "onClick": [Function],
                                                      },
                                                      "ref": null,
                                                      "return": [Circular],
                                                      "selfBaseDuration": 0,
                                                      "sibling": null,
                                                      "stateNode": <a
                                                        href="/"
                                                      >
                                                         Cancel 
                                                      </a>,
                                                      "tag": 5,
                                                      "treeBaseDuration": 0,
                                                      "type": "a",
                                                      "updateQueue": null,
                                                    },
                                                    "childLanes": 0,
                                                    "dependencies": null,
                                                    "elementType": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                    "firstEffect": null,
                                                    "flags": 1,
                                                    "index": 0,
                                                    "key": null,
                                                    "lanes": 0,
                                                    "lastEffect": null,
                                                    "memoizedProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "navigate": [Function],
                                                    },
                                                    "memoizedState": null,
                                                    "mode": 0,
                                                    "nextEffect": null,
                                                    "pendingProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "navigate": [Function],
                                                    },
                                                    "ref": null,
                                                    "return": [Circular],
                                                    "selfBaseDuration": 0,
                                                    "sibling": null,
                                                    "stateNode": null,
                                                    "tag": 11,
                                                    "treeBaseDuration": 0,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                    "updateQueue": null,
                                                  },
                                                  "childLanes": 0,
                                                  "dependencies": Object {
                                                    "firstContext": Object {
                                                      "context": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "Consumer": Object {
                                                          "$$typeof": Symbol(react.context),
                                                          "_calculateChangedBits": null,
                                                          "_context": [Circular],
                                                        },
                                                        "Provider": Object {
                                                          "$$typeof": Symbol(react.provider),
                                                          "_context": [Circular],
                                                        },
                                                        "_calculateChangedBits": null,
                                                        "_currentRenderer": Object {},
                                                        "_currentRenderer2": null,
                                                        "_currentValue": undefined,
                                                        "_currentValue2": undefined,
                                                        "_threadCount": 0,
                                                        "displayName": "Router",
                                                      },
                                                      "next": null,
                                                      "observedBits": 1073741823,
                                                    },
                                                    "lanes": 0,
                                                    "responders": null,
                                                  },
                                                  "elementType": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": [Circular],
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                  },
                                                  "firstEffect": null,
                                                  "flags": 1,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": null,
                                                  "tag": 9,
                                                  "treeBaseDuration": 0,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": [Circular],
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                  },
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 2,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "to": "/",
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "to": "/",
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "stateNode":     ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <button
                                              class="btn btn-primary"
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "button",
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "div",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 5,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": Array [
                                              <button
                                                className="btn btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                Register
                                              </button>,
                                              "    ",
                                              <ForwardRef(Link)
                                                to="/"
                                              >
                                                 Cancel 
                                              </ForwardRef(Link)>,
                                            ],
                                            "className": "buttons",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": Array [
                                              <button
                                                className="btn btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                Register
                                              </button>,
                                              "    ",
                                              <ForwardRef(Link)
                                                to="/"
                                              >
                                                 Cancel 
                                              </ForwardRef(Link)>,
                                            ],
                                            "className": "buttons",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <div
                                            class="buttons"
                                          >
                                            <button
                                              class="btn btn-primary"
                                              type="button"
                                            >
                                              Register
                                            </button>
                                                
                                            <a
                                              href="/"
                                            >
                                               Cancel 
                                            </a>
                                          </div>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "div",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <br />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "br",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <div
                                        class="fields"
                                      >
                                        <br />
                                        <p>
                                           
                                          Password
                                           
                                        </p>
                                        <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />
                                        (*)
                                        <br />
                                        (at least 6 character)
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <div
                                      class="fields"
                                    >
                                      <br />
                                      <p>
                                         
                                        Username
                                         
                                      </p>
                                       
                                      <input
                                        autocomplete="Username"
                                        name="Username"
                                        required=""
                                        type="text"
                                        value=""
                                      />
                                      (*)
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Last name
                                       
                                    </p>
                                    <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      First name
                                       
                                    </p>
                                     
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Last name
                                       
                                    </p>
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  <br />,
                                  <div
                                    className="buttons"
                                  >
                                    <button
                                      className="btn btn-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Register
                                    </button>
                                        
                                    <ForwardRef(Link)
                                      to="/"
                                    >
                                       Cancel 
                                    </ForwardRef(Link)>
                                  </div>,
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      First name
                                       
                                    </p>
                                     
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Last name
                                       
                                    </p>
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  <br />,
                                  <div
                                    className="buttons"
                                  >
                                    <button
                                      className="btn btn-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Register
                                    </button>
                                        
                                    <ForwardRef(Link)
                                      to="/"
                                    >
                                       Cancel 
                                    </ForwardRef(Link)>
                                  </div>,
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  class="buttons"
                                >
                                  <button
                                    class="btn btn-primary"
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <a
                                    href="/"
                                  >
                                     Cancel 
                                  </a>
                                </div>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "form",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>,
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>,
                              "onSubmit": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <form>
                              <div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  class="buttons"
                                >
                                  <button
                                    class="btn btn-primary"
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <a
                                    href="/"
                                  >
                                     Cancel 
                                  </a>
                                </div>
                              </div>
                            </form>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="loginImage"
                            >
                              <img
                                alt="login"
                                height="175"
                                src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                                style={
                                  Object {
                                    "paddingTop": 10,
                                    "position": "relative",
                                  }
                                }
                                width="240"
                              />
                            </div>,
                            <form
                              onSubmit={[Function]}
                            >
                              <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>
                            </form>,
                          ],
                          "className": "Login",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="loginImage"
                            >
                              <img
                                alt="login"
                                height="175"
                                src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                                style={
                                  Object {
                                    "paddingTop": 10,
                                    "position": "relative",
                                  }
                                }
                                width="240"
                              />
                            </div>,
                            <form
                              onSubmit={[Function]}
                            >
                              <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>
                            </form>,
                          ],
                          "className": "Login",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Login"
                        >
                          <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>
                          <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": Object {
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": null,
                            "_currentRenderer2": null,
                            "_currentValue": Array [
                              Array [],
                              [Function],
                            ],
                            "_currentValue2": Array [
                              Array [],
                              [Function],
                            ],
                            "_threadCount": 0,
                          },
                          "next": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                              "displayName": "Router-History",
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "observedBits": 1073741823,
                        },
                        "lanes": 0,
                        "responders": null,
                      },
                      "elementType": [Function],
                      "firstEffect": null,
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": Object {
                            "baseQueue": null,
                            "baseState": "",
                            "memoizedState": "",
                            "next": Object {
                              "baseQueue": null,
                              "baseState": "",
                              "memoizedState": "",
                              "next": null,
                              "queue": Object {
                                "dispatch": [Function],
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": "",
                                "pending": null,
                              },
                            },
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": "",
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                    },
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <SignUP />,
                      "value": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <SignUP />,
                      "value": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Context.Provider
                      value={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <SignUP />
                    </Context.Provider>,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Context.Provider
                      value={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <SignUP />
                    </Context.Provider>,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": null,
                "flags": 5,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalInstance": Object {},
                  "_reactInternals": [Circular],
                  "context": Object {},
                  "props": Object {
                    "children": <SignUP />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "flags": 256,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <SignUP />,
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "_debugRootType": "createLegacyRoot()",
                "callbackNode": null,
                "callbackPriority": 0,
                "containerInfo": <div>
                  <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "entangledLanes": 0,
                "entanglements": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "eventTimes": Array [
                  -1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "expirationTimes": Array [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                ],
                "expiredLanes": 0,
                "finishedLanes": 0,
                "finishedWork": null,
                "hydrate": false,
                "interactionThreadID": 18,
                "memoizedInteractions": Set {},
                "mutableReadLanes": 0,
                "mutableSourceEagerHydrationData": null,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pendingLanes": 0,
                "pingCache": null,
                "pingedLanes": 0,
                "suspendedLanes": 0,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <SignUP />,
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 148,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 150,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 152,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useState",
                    "useContext",
                    "useContext",
                  ],
                  "_debugID": 154,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                    "lineNumber": 13,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 156,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 124,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 158,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 125,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 161,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 126,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "img",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 159,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 134,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 164,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 135,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 166,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 136,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 173,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 137,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 174,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 138,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 180,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 181,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "First name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "First name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 182,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": First name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 175,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 176,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 139,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 177,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="FirstName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  First name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 167,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 148,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 190,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 149,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 191,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 150,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 196,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 197,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Last name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Last name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 198,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Last name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 192,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 151,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 193,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 160,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 205,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 161,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 206,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 162,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 212,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 213,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Username",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Username",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 214,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Username,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 207,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 208,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 163,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 209,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="Username"
                                          name="Username"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Username
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 173,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 222,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 174,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 223,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 175,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 230,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 231,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Password",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Password",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 232,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Password,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 224,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 176,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 225,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 226,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 185,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "br",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {},
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {},
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 227,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 5,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(at least 6 character)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(at least 6 character)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (at least 6 character),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <br />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "br",
                                            "updateQueue": null,
                                          },
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Password
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 170,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 189,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 171,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 190,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 242,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 191,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "button",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 243,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "    ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "    ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 244,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 199,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 248,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 250,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 252,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": "a",
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": <a
                                                    href="/"
                                                  >
                                                     Cancel 
                                                  </a>,
                                                  "tag": 5,
                                                  "treeBaseDuration": 0,
                                                  "type": "a",
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": Object {
                                                "firstContext": Object {
                                                  "context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "_calculateChangedBits": null,
                                                      "_context": [Circular],
                                                    },
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                  "next": null,
                                                  "observedBits": 1073741823,
                                                },
                                                "lanes": 0,
                                                "responders": null,
                                              },
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 9,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 11,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "updateQueue": null,
                                          },
                                          "stateNode":     ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "button",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 5,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="buttons"
                                      >
                                        <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>
                                            
                                        <a
                                          href="/"
                                        >
                                           Cancel 
                                        </a>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autocomplete="password"
                                      name="Password"
                                      required=""
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "form",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 1,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": Object {
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Array [
                          Array [],
                          [Function],
                        ],
                        "_currentValue2": Array [
                          Array [],
                          [Function],
                        ],
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router-History",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "lanes": 0,
                    "responders": null,
                  },
                  "elementType": [Function],
                  "firstEffect": null,
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": null,
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "childLanes": 0,
          "dependencies": null,
          "elementType": [Function],
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 148,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 150,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 152,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useState",
                    "useContext",
                    "useContext",
                  ],
                  "_debugID": 154,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                    "lineNumber": 13,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 156,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 124,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 158,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 125,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 161,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 126,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "img",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 159,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 134,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 164,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 135,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 166,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 136,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 173,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 137,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 174,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 138,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 180,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 181,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "First name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "First name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 182,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": First name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 175,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 176,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 139,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 177,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="FirstName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  First name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 167,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 148,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 190,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 149,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 191,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 150,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 196,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 197,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Last name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Last name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 198,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Last name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 192,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 151,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 193,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 160,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 205,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 161,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 206,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 162,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 212,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 213,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Username",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Username",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 214,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Username,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 207,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 208,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 163,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 209,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="Username"
                                          name="Username"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Username
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 173,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 222,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 174,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 223,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 175,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 230,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 231,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Password",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Password",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 232,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Password,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 224,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 176,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 225,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 226,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 185,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "br",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {},
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {},
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 227,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 5,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(at least 6 character)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(at least 6 character)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (at least 6 character),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <br />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "br",
                                            "updateQueue": null,
                                          },
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Password
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 170,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 189,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 171,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 190,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 242,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 191,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "button",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 243,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "    ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "    ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 244,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 199,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 248,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 250,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 252,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": "a",
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": <a
                                                    href="/"
                                                  >
                                                     Cancel 
                                                  </a>,
                                                  "tag": 5,
                                                  "treeBaseDuration": 0,
                                                  "type": "a",
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": Object {
                                                "firstContext": Object {
                                                  "context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "_calculateChangedBits": null,
                                                      "_context": [Circular],
                                                    },
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                  "next": null,
                                                  "observedBits": 1073741823,
                                                },
                                                "lanes": 0,
                                                "responders": null,
                                              },
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 9,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 11,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "updateQueue": null,
                                          },
                                          "stateNode":     ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "button",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 5,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="buttons"
                                      >
                                        <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>
                                            
                                        <a
                                          href="/"
                                        >
                                           Cancel 
                                        </a>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autocomplete="password"
                                      name="Password"
                                      required=""
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "form",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 1,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": Object {
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Array [
                          Array [],
                          [Function],
                        ],
                        "_currentValue2": Array [
                          Array [],
                          [Function],
                        ],
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router-History",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "lanes": 0,
                    "responders": null,
                  },
                  "elementType": [Function],
                  "firstEffect": null,
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": null,
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "flags": 5,
          "index": 0,
          "key": null,
          "lanes": 0,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 148,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 150,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 152,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useState",
                    "useContext",
                    "useContext",
                  ],
                  "_debugID": 154,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                    "lineNumber": 13,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 156,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 124,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 158,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 125,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 161,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 126,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "img",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 159,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 134,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 164,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 135,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 166,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 136,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 173,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 137,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 174,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 138,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 180,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 181,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "First name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "First name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 182,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": First name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 175,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 176,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 139,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 177,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="FirstName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  First name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 167,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 148,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 190,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 149,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 191,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 150,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 196,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 197,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Last name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Last name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 198,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Last name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 192,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 151,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 193,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 160,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 205,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 161,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 206,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 162,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 212,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 213,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Username",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Username",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 214,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Username,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 207,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 208,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 163,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 209,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="Username"
                                          name="Username"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Username
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 173,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 222,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 174,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 223,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 175,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 230,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 231,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Password",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Password",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 232,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Password,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 224,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 176,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 225,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 226,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 185,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "br",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {},
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {},
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 227,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 5,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(at least 6 character)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(at least 6 character)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (at least 6 character),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <br />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "br",
                                            "updateQueue": null,
                                          },
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Password
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 170,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 189,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 171,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 190,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 242,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 191,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "button",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 243,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "    ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "    ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 244,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 199,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 248,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 250,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 252,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": "a",
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": <a
                                                    href="/"
                                                  >
                                                     Cancel 
                                                  </a>,
                                                  "tag": 5,
                                                  "treeBaseDuration": 0,
                                                  "type": "a",
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": Object {
                                                "firstContext": Object {
                                                  "context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "_calculateChangedBits": null,
                                                      "_context": [Circular],
                                                    },
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                  "next": null,
                                                  "observedBits": 1073741823,
                                                },
                                                "lanes": 0,
                                                "responders": null,
                                              },
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 9,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 11,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "updateQueue": null,
                                          },
                                          "stateNode":     ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "button",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 5,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="buttons"
                                      >
                                        <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>
                                            
                                        <a
                                          href="/"
                                        >
                                           Cancel 
                                        </a>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autocomplete="password"
                                      name="Password"
                                      required=""
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "form",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 1,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": Object {
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Array [
                          Array [],
                          [Function],
                        ],
                        "_currentValue2": Array [
                          Array [],
                          [Function],
                        ],
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router-History",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "lanes": 0,
                    "responders": null,
                  },
                  "elementType": [Function],
                  "firstEffect": null,
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": null,
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "children": <SignUP />,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <SignUP />,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 144,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 148,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 150,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 152,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": Array [
                      "useState",
                      "useState",
                      "useState",
                      "useState",
                      "useContext",
                      "useContext",
                    ],
                    "_debugID": 154,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                      "lineNumber": 13,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 156,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 124,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 158,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 125,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 161,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 126,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "img",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "alt": "login",
                            "height": "175",
                            "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                            "style": Object {
                              "paddingTop": 10,
                              "position": "relative",
                            },
                            "width": "240",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />,
                          "className": "loginImage",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 159,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 134,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 164,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 135,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 166,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 136,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 173,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 137,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 174,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 138,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 180,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 181,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "First name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "First name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 182,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": First name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "First name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 175,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 176,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 139,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "FirstName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 177,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="FirstName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    First name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    First name
                                     
                                  </p>,
                                  " ",
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 167,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 148,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 190,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 149,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 191,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 150,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 196,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 197,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Last name",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Last name",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 198,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Last name,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Last name",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 192,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 151,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "input",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "name": "LastName",
                                        "onChange": [Function],
                                        "required": true,
                                        "type": "text",
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 193,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "(*)",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "(*)",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": (*),
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <input
                                        name="LastName"
                                        required=""
                                        type="text"
                                        value=""
                                      />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "input",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Last name
                                       
                                    </p>,
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 168,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 160,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 205,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 161,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 206,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 162,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 212,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 213,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Username",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Username",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 214,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Username,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Username",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 207,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 208,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 163,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "Username",
                                            "name": "Username",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "text",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 209,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="Username"
                                            name="Username"
                                            required=""
                                            type="text"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Username
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Username
                                         
                                      </p>,
                                      " ",
                                      <input
                                        autoComplete="Username"
                                        name="Username"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 169,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 173,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 222,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 174,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 223,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 175,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 230,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 231,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "Password",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "Password",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 232,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": " ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": " ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode":  ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": Password,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "p",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            " ",
                                            "Password",
                                            " ",
                                          ],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 224,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 176,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "input",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "autoComplete": "password",
                                            "name": "Password",
                                            "onChange": [Function],
                                            "required": true,
                                            "type": "password",
                                            "value": "",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 225,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 3,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "(*)",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "(*)",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 226,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 185,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": "br",
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 4,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {},
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {},
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 227,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": null,
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": null,
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 5,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": "(at least 6 character)",
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": "(at least 6 character)",
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": (at least 6 character),
                                                "tag": 6,
                                                "treeBaseDuration": 0,
                                                "type": null,
                                                "updateQueue": null,
                                              },
                                              "stateNode": <br />,
                                              "tag": 5,
                                              "treeBaseDuration": 0,
                                              "type": "br",
                                              "updateQueue": null,
                                            },
                                            "stateNode": (*),
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <input
                                            autocomplete="password"
                                            name="Password"
                                            required=""
                                            type="password"
                                            value=""
                                          />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "input",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <p>
                                           
                                          Password
                                           
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Password
                                           
                                        </p>,
                                        <input
                                          autoComplete="password"
                                          name="Password"
                                          onChange={[Function]}
                                          required={true}
                                          type="password"
                                          value=""
                                        />,
                                        "(*)",
                                        <br />,
                                        "(at least 6 character)",
                                      ],
                                      "className": "fields",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 170,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 189,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 171,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 190,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 242,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 191,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "button",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "Register",
                                            "className": "btn btn-primary",
                                            "onClick": [Function],
                                            "type": "button",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 243,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "    ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "    ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 244,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                "lineNumber": 199,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 248,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 250,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": FiberNode {
                                                    "_debugHookTypes": null,
                                                    "_debugID": 252,
                                                    "_debugNeedsRemount": false,
                                                    "_debugOwner": [Circular],
                                                    "_debugSource": null,
                                                    "actualDuration": 0,
                                                    "actualStartTime": -1,
                                                    "alternate": null,
                                                    "child": null,
                                                    "childLanes": 0,
                                                    "dependencies": null,
                                                    "elementType": "a",
                                                    "firstEffect": null,
                                                    "flags": 0,
                                                    "index": 0,
                                                    "key": null,
                                                    "lanes": 0,
                                                    "lastEffect": null,
                                                    "memoizedProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "memoizedState": null,
                                                    "mode": 0,
                                                    "nextEffect": null,
                                                    "pendingProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "onClick": [Function],
                                                    },
                                                    "ref": null,
                                                    "return": [Circular],
                                                    "selfBaseDuration": 0,
                                                    "sibling": null,
                                                    "stateNode": <a
                                                      href="/"
                                                    >
                                                       Cancel 
                                                    </a>,
                                                    "tag": 5,
                                                    "treeBaseDuration": 0,
                                                    "type": "a",
                                                    "updateQueue": null,
                                                  },
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "firstEffect": null,
                                                  "flags": 1,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "navigate": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": null,
                                                  "tag": 11,
                                                  "treeBaseDuration": 0,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": Object {
                                                  "firstContext": Object {
                                                    "context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "_calculateChangedBits": null,
                                                        "_context": [Circular],
                                                      },
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                    "next": null,
                                                    "observedBits": 1073741823,
                                                  },
                                                  "lanes": 0,
                                                  "responders": null,
                                                },
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 9,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "_calculateChangedBits": null,
                                                  "_context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": [Circular],
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": " Cancel ",
                                                "to": "/",
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 11,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "updateQueue": null,
                                            },
                                            "stateNode":     ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "button",
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "div",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 5,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            <button
                                              className="btn btn-primary"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "    ",
                                            <ForwardRef(Link)
                                              to="/"
                                            >
                                               Cancel 
                                            </ForwardRef(Link)>,
                                          ],
                                          "className": "buttons",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <div
                                          class="buttons"
                                        >
                                          <button
                                            class="btn btn-primary"
                                            type="button"
                                          >
                                            Register
                                          </button>
                                              
                                          <a
                                            href="/"
                                          >
                                             Cancel 
                                          </a>
                                        </div>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "div",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <div
                                      class="fields"
                                    >
                                      <br />
                                      <p>
                                         
                                        Password
                                         
                                      </p>
                                      <input
                                        autocomplete="password"
                                        name="Password"
                                        required=""
                                        type="password"
                                        value=""
                                      />
                                      (*)
                                      <br />
                                      (at least 6 character)
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autocomplete="Username"
                                      name="Username"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>,
                                <br />,
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "form",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>,
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />
                          </div>,
                          <form
                            onSubmit={[Function]}
                          >
                            <div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>
                            </div>
                          </form>,
                        ],
                        "className": "Login",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": Object {
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": null,
                          "_currentRenderer2": null,
                          "_currentValue": Array [
                            Array [],
                            [Function],
                          ],
                          "_currentValue2": Array [
                            Array [],
                            [Function],
                          ],
                          "_threadCount": 0,
                        },
                        "next": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router-History",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "observedBits": 1073741823,
                      },
                      "lanes": 0,
                      "responders": null,
                    },
                    "elementType": [Function],
                    "firstEffect": null,
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": Object {
                            "baseQueue": null,
                            "baseState": "",
                            "memoizedState": "",
                            "next": null,
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": "",
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <SignUP />,
                    "value": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router-History",
                    },
                  },
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Context.Provider
                    value={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                  >
                    <SignUP />
                  </Context.Provider>,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": null,
              "flags": 5,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Router {
                "_isMounted": true,
                "_pendingLocation": null,
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "props": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "unlisten": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "flags": 1,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <SignUP />,
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <SignUP />,
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <SignUP />,
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 141,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 141,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childLanes": 0,
                "dependencies": null,
                "elementType": null,
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 1,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "createLegacyRoot()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": <div>
                    <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "entangledLanes": 0,
                  "entanglements": Array [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": Array [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": Array [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "hydrate": false,
                  "interactionThreadID": 18,
                  "memoizedInteractions": Set {},
                  "mutableReadLanes": 0,
                  "mutableSourceEagerHydrationData": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "effects": null,
                  "firstBaseUpdate": Object {
                    "callback": null,
                    "eventTime": 4158.6029,
                    "lane": 1,
                    "next": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastBaseUpdate": Object {
                    "callback": null,
                    "eventTime": 4158.6029,
                    "lane": 1,
                    "next": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": null,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 148,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 150,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 152,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": Array [
                        "useState",
                        "useState",
                        "useState",
                        "useState",
                        "useContext",
                        "useContext",
                      ],
                      "_debugID": 154,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                        "lineNumber": 13,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 156,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 124,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 158,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 125,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 161,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 126,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "img",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "alt": "login",
                              "height": "175",
                              "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                              "style": Object {
                                "paddingTop": 10,
                                "position": "relative",
                              },
                              "width": "240",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "alt": "login",
                              "height": "175",
                              "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                              "style": Object {
                                "paddingTop": 10,
                                "position": "relative",
                              },
                              "width": "240",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "img",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />,
                            "className": "loginImage",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style={
                                Object {
                                  "paddingTop": 10,
                                  "position": "relative",
                                }
                              }
                              width="240"
                            />,
                            "className": "loginImage",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 159,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 134,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 164,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 135,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 166,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 136,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 173,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 137,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 174,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 138,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 180,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 181,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "First name",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "First name",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 182,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": First name,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "First name",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "First name",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 175,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 176,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 139,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "name": "FirstName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "name": "FirstName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 177,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          name="FirstName"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      First name
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      First name
                                       
                                    </p>,
                                    " ",
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      First name
                                       
                                    </p>,
                                    " ",
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 167,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 148,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 190,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 149,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 191,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 150,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 196,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 197,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Last name",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Last name",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 198,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Last name,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Last name",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Last name",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 192,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 151,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "name": "LastName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "name": "LastName",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 193,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          name="LastName"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Last name
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Last name
                                         
                                      </p>,
                                      <input
                                        name="LastName"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Last name
                                         
                                      </p>,
                                      <input
                                        name="LastName"
                                        onChange={[Function]}
                                        required={true}
                                        type="text"
                                        value=""
                                      />,
                                      "(*)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 168,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 160,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 205,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 161,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "br",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {},
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {},
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 206,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 162,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 212,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 213,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 1,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": "Username",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "Username",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 214,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 2,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": " ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": " ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode":  ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": Username,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "p",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": Array [
                                            " ",
                                            "Username",
                                            " ",
                                          ],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": Array [
                                            " ",
                                            "Username",
                                            " ",
                                          ],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 207,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 208,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 163,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "input",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 3,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "autoComplete": "Username",
                                              "name": "Username",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "text",
                                              "value": "",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "autoComplete": "Username",
                                              "name": "Username",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "text",
                                              "value": "",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 209,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 4,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(*)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(*)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (*),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <input
                                              autocomplete="Username"
                                              name="Username"
                                              required=""
                                              type="text"
                                              value=""
                                            />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "input",
                                            "updateQueue": null,
                                          },
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <p>
                                           
                                          Username
                                           
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <br />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "br",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "div",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Username
                                           
                                        </p>,
                                        " ",
                                        <input
                                          autoComplete="Username"
                                          name="Username"
                                          onChange={[Function]}
                                          required={true}
                                          type="text"
                                          value=""
                                        />,
                                        "(*)",
                                      ],
                                      "className": "fields",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <br />,
                                        <p>
                                           
                                          Username
                                           
                                        </p>,
                                        " ",
                                        <input
                                          autoComplete="Username"
                                          name="Username"
                                          onChange={[Function]}
                                          required={true}
                                          type="text"
                                          value=""
                                        />,
                                        "(*)",
                                      ],
                                      "className": "fields",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 169,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 173,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 222,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 174,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "br",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {},
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {},
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 223,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 175,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 230,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 231,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 1,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "Password",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "Password",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 232,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": null,
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": null,
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 2,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": " ",
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": " ",
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode":  ,
                                                "tag": 6,
                                                "treeBaseDuration": 0,
                                                "type": null,
                                                "updateQueue": null,
                                              },
                                              "stateNode": Password,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "p",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": Array [
                                              " ",
                                              "Password",
                                              " ",
                                            ],
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": Array [
                                              " ",
                                              "Password",
                                              " ",
                                            ],
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 224,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 176,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "input",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "autoComplete": "password",
                                              "name": "Password",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "password",
                                              "value": "",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "autoComplete": "password",
                                              "name": "Password",
                                              "onChange": [Function],
                                              "required": true,
                                              "type": "password",
                                              "value": "",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 225,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 3,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(*)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(*)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 226,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": Object {
                                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                  "lineNumber": 185,
                                                },
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": null,
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": "br",
                                                "firstEffect": null,
                                                "flags": 0,
                                                "index": 4,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {},
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {},
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 227,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": null,
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": null,
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 5,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": "(at least 6 character)",
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": "(at least 6 character)",
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": (at least 6 character),
                                                  "tag": 6,
                                                  "treeBaseDuration": 0,
                                                  "type": null,
                                                  "updateQueue": null,
                                                },
                                                "stateNode": <br />,
                                                "tag": 5,
                                                "treeBaseDuration": 0,
                                                "type": "br",
                                                "updateQueue": null,
                                              },
                                              "stateNode": (*),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <input
                                              autocomplete="password"
                                              name="Password"
                                              required=""
                                              type="password"
                                              value=""
                                            />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "input",
                                            "updateQueue": null,
                                          },
                                          "stateNode": <p>
                                             
                                            Password
                                             
                                          </p>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "p",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <br />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "br",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <br />,
                                          <p>
                                             
                                            Password
                                             
                                          </p>,
                                          <input
                                            autoComplete="password"
                                            name="Password"
                                            onChange={[Function]}
                                            required={true}
                                            type="password"
                                            value=""
                                          />,
                                          "(*)",
                                          <br />,
                                          "(at least 6 character)",
                                        ],
                                        "className": "fields",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <br />,
                                          <p>
                                             
                                            Password
                                             
                                          </p>,
                                          <input
                                            autoComplete="password"
                                            name="Password"
                                            onChange={[Function]}
                                            required={true}
                                            type="password"
                                            value=""
                                          />,
                                          "(*)",
                                          <br />,
                                          "(at least 6 character)",
                                        ],
                                        "className": "fields",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 170,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 189,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "br",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 4,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {},
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {},
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 171,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                            "lineNumber": 190,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 242,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 191,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "button",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 0,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": "Register",
                                              "className": "btn btn-primary",
                                              "onClick": [Function],
                                              "type": "button",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": "Register",
                                              "className": "btn btn-primary",
                                              "onClick": [Function],
                                              "type": "button",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 243,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 1,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "    ",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "    ",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 244,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": Object {
                                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                                  "lineNumber": 199,
                                                },
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 248,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": FiberNode {
                                                    "_debugHookTypes": null,
                                                    "_debugID": 250,
                                                    "_debugNeedsRemount": false,
                                                    "_debugOwner": [Circular],
                                                    "_debugSource": null,
                                                    "actualDuration": 0,
                                                    "actualStartTime": -1,
                                                    "alternate": null,
                                                    "child": FiberNode {
                                                      "_debugHookTypes": null,
                                                      "_debugID": 252,
                                                      "_debugNeedsRemount": false,
                                                      "_debugOwner": [Circular],
                                                      "_debugSource": null,
                                                      "actualDuration": 0,
                                                      "actualStartTime": -1,
                                                      "alternate": null,
                                                      "child": null,
                                                      "childLanes": 0,
                                                      "dependencies": null,
                                                      "elementType": "a",
                                                      "firstEffect": null,
                                                      "flags": 0,
                                                      "index": 0,
                                                      "key": null,
                                                      "lanes": 0,
                                                      "lastEffect": null,
                                                      "memoizedProps": Object {
                                                        "children": " Cancel ",
                                                        "href": "/",
                                                        "onClick": [Function],
                                                      },
                                                      "memoizedState": null,
                                                      "mode": 0,
                                                      "nextEffect": null,
                                                      "pendingProps": Object {
                                                        "children": " Cancel ",
                                                        "href": "/",
                                                        "onClick": [Function],
                                                      },
                                                      "ref": null,
                                                      "return": [Circular],
                                                      "selfBaseDuration": 0,
                                                      "sibling": null,
                                                      "stateNode": <a
                                                        href="/"
                                                      >
                                                         Cancel 
                                                      </a>,
                                                      "tag": 5,
                                                      "treeBaseDuration": 0,
                                                      "type": "a",
                                                      "updateQueue": null,
                                                    },
                                                    "childLanes": 0,
                                                    "dependencies": null,
                                                    "elementType": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                    "firstEffect": null,
                                                    "flags": 1,
                                                    "index": 0,
                                                    "key": null,
                                                    "lanes": 0,
                                                    "lastEffect": null,
                                                    "memoizedProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "navigate": [Function],
                                                    },
                                                    "memoizedState": null,
                                                    "mode": 0,
                                                    "nextEffect": null,
                                                    "pendingProps": Object {
                                                      "children": " Cancel ",
                                                      "href": "/",
                                                      "navigate": [Function],
                                                    },
                                                    "ref": null,
                                                    "return": [Circular],
                                                    "selfBaseDuration": 0,
                                                    "sibling": null,
                                                    "stateNode": null,
                                                    "tag": 11,
                                                    "treeBaseDuration": 0,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                    "updateQueue": null,
                                                  },
                                                  "childLanes": 0,
                                                  "dependencies": Object {
                                                    "firstContext": Object {
                                                      "context": Object {
                                                        "$$typeof": Symbol(react.context),
                                                        "Consumer": Object {
                                                          "$$typeof": Symbol(react.context),
                                                          "_calculateChangedBits": null,
                                                          "_context": [Circular],
                                                        },
                                                        "Provider": Object {
                                                          "$$typeof": Symbol(react.provider),
                                                          "_context": [Circular],
                                                        },
                                                        "_calculateChangedBits": null,
                                                        "_currentRenderer": Object {},
                                                        "_currentRenderer2": null,
                                                        "_currentValue": undefined,
                                                        "_currentValue2": undefined,
                                                        "_threadCount": 0,
                                                        "displayName": "Router",
                                                      },
                                                      "next": null,
                                                      "observedBits": 1073741823,
                                                    },
                                                    "lanes": 0,
                                                    "responders": null,
                                                  },
                                                  "elementType": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": [Circular],
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                  },
                                                  "firstEffect": null,
                                                  "flags": 1,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": null,
                                                  "tag": 9,
                                                  "treeBaseDuration": 0,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "_calculateChangedBits": null,
                                                    "_context": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "Consumer": [Circular],
                                                      "Provider": Object {
                                                        "$$typeof": Symbol(react.provider),
                                                        "_context": [Circular],
                                                      },
                                                      "_calculateChangedBits": null,
                                                      "_currentRenderer": Object {},
                                                      "_currentRenderer2": null,
                                                      "_currentValue": undefined,
                                                      "_currentValue2": undefined,
                                                      "_threadCount": 0,
                                                      "displayName": "Router",
                                                    },
                                                  },
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 2,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "to": "/",
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "to": "/",
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "stateNode":     ,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <button
                                              class="btn btn-primary"
                                              type="button"
                                            >
                                              Register
                                            </button>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "button",
                                            "updateQueue": null,
                                          },
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "div",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 5,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": Array [
                                              <button
                                                className="btn btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                Register
                                              </button>,
                                              "    ",
                                              <ForwardRef(Link)
                                                to="/"
                                              >
                                                 Cancel 
                                              </ForwardRef(Link)>,
                                            ],
                                            "className": "buttons",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": Array [
                                              <button
                                                className="btn btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                Register
                                              </button>,
                                              "    ",
                                              <ForwardRef(Link)
                                                to="/"
                                              >
                                                 Cancel 
                                              </ForwardRef(Link)>,
                                            ],
                                            "className": "buttons",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <div
                                            class="buttons"
                                          >
                                            <button
                                              class="btn btn-primary"
                                              type="button"
                                            >
                                              Register
                                            </button>
                                                
                                            <a
                                              href="/"
                                            >
                                               Cancel 
                                            </a>
                                          </div>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "div",
                                          "updateQueue": null,
                                        },
                                        "stateNode": <br />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "br",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <div
                                        class="fields"
                                      >
                                        <br />
                                        <p>
                                           
                                          Password
                                           
                                        </p>
                                        <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />
                                        (*)
                                        <br />
                                        (at least 6 character)
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <div
                                      class="fields"
                                    >
                                      <br />
                                      <p>
                                         
                                        Username
                                         
                                      </p>
                                       
                                      <input
                                        autocomplete="Username"
                                        name="Username"
                                        required=""
                                        type="text"
                                        value=""
                                      />
                                      (*)
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Last name
                                       
                                    </p>
                                    <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      First name
                                       
                                    </p>
                                     
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Last name
                                       
                                    </p>
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  <br />,
                                  <div
                                    className="buttons"
                                  >
                                    <button
                                      className="btn btn-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Register
                                    </button>
                                        
                                    <ForwardRef(Link)
                                      to="/"
                                    >
                                       Cancel 
                                    </ForwardRef(Link)>
                                  </div>,
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      First name
                                       
                                    </p>
                                     
                                    <input
                                      name="FirstName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Last name
                                       
                                    </p>
                                    <input
                                      name="LastName"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Username
                                       
                                    </p>
                                     
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />
                                    (*)
                                  </div>,
                                  <div
                                    className="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autoComplete="password"
                                      name="Password"
                                      onChange={[Function]}
                                      required={true}
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  <br />,
                                  <div
                                    className="buttons"
                                  >
                                    <button
                                      className="btn btn-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Register
                                    </button>
                                        
                                    <ForwardRef(Link)
                                      to="/"
                                    >
                                       Cancel 
                                    </ForwardRef(Link)>
                                  </div>,
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  class="buttons"
                                >
                                  <button
                                    class="btn btn-primary"
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <a
                                    href="/"
                                  >
                                     Cancel 
                                  </a>
                                </div>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "form",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>,
                              "onSubmit": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>,
                              "onSubmit": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <form>
                              <div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autocomplete="password"
                                    name="Password"
                                    required=""
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  class="buttons"
                                >
                                  <button
                                    class="btn btn-primary"
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <a
                                    href="/"
                                  >
                                     Cancel 
                                  </a>
                                </div>
                              </div>
                            </form>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "form",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "div",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="loginImage"
                            >
                              <img
                                alt="login"
                                height="175"
                                src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                                style={
                                  Object {
                                    "paddingTop": 10,
                                    "position": "relative",
                                  }
                                }
                                width="240"
                              />
                            </div>,
                            <form
                              onSubmit={[Function]}
                            >
                              <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>
                            </form>,
                          ],
                          "className": "Login",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="loginImage"
                            >
                              <img
                                alt="login"
                                height="175"
                                src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                                style={
                                  Object {
                                    "paddingTop": 10,
                                    "position": "relative",
                                  }
                                }
                                width="240"
                              />
                            </div>,
                            <form
                              onSubmit={[Function]}
                            >
                              <div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    First name
                                     
                                  </p>
                                   
                                  <input
                                    name="FirstName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Last name
                                     
                                  </p>
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autoComplete="Username"
                                    name="Username"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>
                                <div
                                  className="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Password
                                     
                                  </p>
                                  <input
                                    autoComplete="password"
                                    name="Password"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  />
                                  (*)
                                  <br />
                                  (at least 6 character)
                                </div>
                                <br />
                                <div
                                  className="buttons"
                                >
                                  <button
                                    className="btn btn-primary"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Register
                                  </button>
                                      
                                  <ForwardRef(Link)
                                    to="/"
                                  >
                                     Cancel 
                                  </ForwardRef(Link)>
                                </div>
                              </div>
                            </form>,
                          ],
                          "className": "Login",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Login"
                        >
                          <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>
                          <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": Object {
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": null,
                            "_currentRenderer2": null,
                            "_currentValue": Array [
                              Array [],
                              [Function],
                            ],
                            "_currentValue2": Array [
                              Array [],
                              [Function],
                            ],
                            "_threadCount": 0,
                          },
                          "next": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                              "displayName": "Router-History",
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "observedBits": 1073741823,
                        },
                        "lanes": 0,
                        "responders": null,
                      },
                      "elementType": [Function],
                      "firstEffect": null,
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": Object {
                            "baseQueue": null,
                            "baseState": "",
                            "memoizedState": "",
                            "next": Object {
                              "baseQueue": null,
                              "baseState": "",
                              "memoizedState": "",
                              "next": null,
                              "queue": Object {
                                "dispatch": [Function],
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": "",
                                "pending": null,
                              },
                            },
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": "",
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                    },
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <SignUP />,
                      "value": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <SignUP />,
                      "value": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router-History",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Context.Provider
                      value={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <SignUP />
                    </Context.Provider>,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Context.Provider
                      value={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <SignUP />
                    </Context.Provider>,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": null,
                "flags": 5,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalInstance": Object {},
                  "_reactInternals": [Circular],
                  "context": Object {},
                  "props": Object {
                    "children": <SignUP />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "flags": 256,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <SignUP />,
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "_debugRootType": "createLegacyRoot()",
                "callbackNode": null,
                "callbackPriority": 0,
                "containerInfo": <div>
                  <div
                    class="Login"
                  >
                    <div
                      class="loginImage"
                    >
                      <img
                        alt="login"
                        height="175"
                        src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                        style="position: relative; padding-top: 10px;"
                        width="240"
                      />
                    </div>
                    <form>
                      <div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>
                        <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>
                        <br />
                        <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "entangledLanes": 0,
                "entanglements": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "eventTimes": Array [
                  -1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "expirationTimes": Array [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                ],
                "expiredLanes": 0,
                "finishedLanes": 0,
                "finishedWork": null,
                "hydrate": false,
                "interactionThreadID": 18,
                "memoizedInteractions": Set {},
                "mutableReadLanes": 0,
                "mutableSourceEagerHydrationData": null,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pendingLanes": 0,
                "pingCache": null,
                "pingedLanes": 0,
                "suspendedLanes": 0,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <SignUP />,
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalInstance": Object {},
              "_reactInternals": [Circular],
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <SignUP />,
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <SignUP />,
                },
                "wrappingComponentProps": null,
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": null,
            "effects": null,
            "firstBaseUpdate": null,
            "lastBaseUpdate": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <SignUP />,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <SignUP />,
      },
      "ref": null,
      "rendered": Object {
        "instance": Router {
          "_isMounted": true,
          "_pendingLocation": null,
          "_reactInternalInstance": Object {},
          "_reactInternals": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 148,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 146,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 144,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": [Circular],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 141,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": null,
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "createLegacyRoot()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": <div>
                        <div
                          class="Login"
                        >
                          <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>
                          <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "entangledLanes": 0,
                      "entanglements": Array [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": Array [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": Array [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "hydrate": false,
                      "interactionThreadID": 18,
                      "memoizedInteractions": Set {},
                      "mutableReadLanes": 0,
                      "mutableSourceEagerHydrationData": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": [Circular],
                  "flags": 256,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalInstance": Object {},
                  "_reactInternals": [Circular],
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": [Circular],
              "flags": 5,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <SignUP />,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 144,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": [Circular],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 141,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": null,
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "createLegacyRoot()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": <div>
                        <div
                          class="Login"
                        >
                          <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>
                          <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "entangledLanes": 0,
                      "entanglements": Array [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": Array [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": Array [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "hydrate": false,
                      "interactionThreadID": 18,
                      "memoizedInteractions": Set {},
                      "mutableReadLanes": 0,
                      "mutableSourceEagerHydrationData": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": [Circular],
                  "flags": 256,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalInstance": Object {},
                  "_reactInternals": [Circular],
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <SignUP />,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 150,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 152,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useState",
                    "useContext",
                    "useContext",
                  ],
                  "_debugID": 154,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\__test__\\\\Signup.test.js",
                    "lineNumber": 13,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 156,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                      "lineNumber": 124,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 158,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                        "lineNumber": 125,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 161,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 126,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "img",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "login",
                          "height": "175",
                          "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                          "style": Object {
                            "paddingTop": 10,
                            "position": "relative",
                          },
                          "width": "240",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": "div",
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style={
                            Object {
                              "paddingTop": 10,
                              "position": "relative",
                            }
                          }
                          width="240"
                        />,
                        "className": "loginImage",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 159,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                          "lineNumber": 134,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 164,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                            "lineNumber": 135,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 166,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                              "lineNumber": 136,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 173,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 137,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "br",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 174,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 138,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 180,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 181,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": "First name",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "First name",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 182,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": First name,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "p",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    " ",
                                    "First name",
                                    " ",
                                  ],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 175,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": null,
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 2,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": " ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": " ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 176,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 139,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 3,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "FirstName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 177,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 4,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="FirstName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode":  ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <p>
                                   
                                  First name
                                   
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "div",
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <br />,
                                <p>
                                   
                                  First name
                                   
                                </p>,
                                " ",
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />,
                                "(*)",
                              ],
                              "className": "fields",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 167,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                "lineNumber": 148,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 190,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 149,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "br",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 191,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 150,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 196,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": " ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": " ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 197,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "Last name",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "Last name",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 198,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": Last name,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode":  ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "p",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      " ",
                                      "Last name",
                                      " ",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 192,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 151,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "input",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 2,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "name": "LastName",
                                      "onChange": [Function],
                                      "required": true,
                                      "type": "text",
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 193,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 3,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": "(*)",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "(*)",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": (*),
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <input
                                      name="LastName"
                                      required=""
                                      type="text"
                                      value=""
                                    />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "input",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "div",
                              "firstEffect": null,
                              "flags": 0,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <br />,
                                  <p>
                                     
                                    Last name
                                     
                                  </p>,
                                  <input
                                    name="LastName"
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  />,
                                  "(*)",
                                ],
                                "className": "fields",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                  "lineNumber": 160,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 205,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 161,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "br",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 206,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 162,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 212,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 213,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": "Username",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "Username",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 214,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 2,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": " ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": " ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode":  ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": Username,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "p",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        " ",
                                        "Username",
                                        " ",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 207,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 2,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 208,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 163,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 3,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "Username",
                                          "name": "Username",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 209,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 4,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="Username"
                                          name="Username"
                                          required=""
                                          type="text"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": <p>
                                       
                                      Username
                                       
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "div",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 2,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <br />,
                                    <p>
                                       
                                      Username
                                       
                                    </p>,
                                    " ",
                                    <input
                                      autoComplete="Username"
                                      name="Username"
                                      onChange={[Function]}
                                      required={true}
                                      type="text"
                                      value=""
                                    />,
                                    "(*)",
                                  ],
                                  "className": "fields",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                    "lineNumber": 173,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 222,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 174,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 223,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 175,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 230,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": null,
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 231,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "Password",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "Password",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 232,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": null,
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": " ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": " ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode":  ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": Password,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "p",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          " ",
                                          "Password",
                                          " ",
                                        ],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 224,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 176,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "input",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 2,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "autoComplete": "password",
                                          "name": "Password",
                                          "onChange": [Function],
                                          "required": true,
                                          "type": "password",
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 225,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 3,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "(*)",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "(*)",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 226,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 185,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": "br",
                                            "firstEffect": null,
                                            "flags": 0,
                                            "index": 4,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {},
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {},
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 227,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childLanes": 0,
                                              "dependencies": null,
                                              "elementType": null,
                                              "firstEffect": null,
                                              "flags": 0,
                                              "index": 5,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": "(at least 6 character)",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "(at least 6 character)",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": (at least 6 character),
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": <br />,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "br",
                                            "updateQueue": null,
                                          },
                                          "stateNode": (*),
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <input
                                          autocomplete="password"
                                          name="Password"
                                          required=""
                                          type="password"
                                          value=""
                                        />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "input",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <p>
                                         
                                        Password
                                         
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "div",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 3,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <br />,
                                      <p>
                                         
                                        Password
                                         
                                      </p>,
                                      <input
                                        autoComplete="password"
                                        name="Password"
                                        onChange={[Function]}
                                        required={true}
                                        type="password"
                                        value=""
                                      />,
                                      "(*)",
                                      <br />,
                                      "(at least 6 character)",
                                    ],
                                    "className": "fields",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 170,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                      "lineNumber": 189,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "br",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 4,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {},
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 171,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                        "lineNumber": 190,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 242,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                          "lineNumber": 191,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "button",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "Register",
                                          "className": "btn btn-primary",
                                          "onClick": [Function],
                                          "type": "button",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 243,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": null,
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 1,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": "    ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "    ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 244,
                                            "_debugNeedsRemount": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\Users\\\\AKIF\\\\Desktop\\\\sandwich-recipe-app\\\\client\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.jsx",
                                              "lineNumber": 199,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 248,
                                              "_debugNeedsRemount": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": FiberNode {
                                                "_debugHookTypes": null,
                                                "_debugID": 250,
                                                "_debugNeedsRemount": false,
                                                "_debugOwner": [Circular],
                                                "_debugSource": null,
                                                "actualDuration": 0,
                                                "actualStartTime": -1,
                                                "alternate": null,
                                                "child": FiberNode {
                                                  "_debugHookTypes": null,
                                                  "_debugID": 252,
                                                  "_debugNeedsRemount": false,
                                                  "_debugOwner": [Circular],
                                                  "_debugSource": null,
                                                  "actualDuration": 0,
                                                  "actualStartTime": -1,
                                                  "alternate": null,
                                                  "child": null,
                                                  "childLanes": 0,
                                                  "dependencies": null,
                                                  "elementType": "a",
                                                  "firstEffect": null,
                                                  "flags": 0,
                                                  "index": 0,
                                                  "key": null,
                                                  "lanes": 0,
                                                  "lastEffect": null,
                                                  "memoizedProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "memoizedState": null,
                                                  "mode": 0,
                                                  "nextEffect": null,
                                                  "pendingProps": Object {
                                                    "children": " Cancel ",
                                                    "href": "/",
                                                    "onClick": [Function],
                                                  },
                                                  "ref": null,
                                                  "return": [Circular],
                                                  "selfBaseDuration": 0,
                                                  "sibling": null,
                                                  "stateNode": <a
                                                    href="/"
                                                  >
                                                     Cancel 
                                                  </a>,
                                                  "tag": 5,
                                                  "treeBaseDuration": 0,
                                                  "type": "a",
                                                  "updateQueue": null,
                                                },
                                                "childLanes": 0,
                                                "dependencies": null,
                                                "elementType": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "firstEffect": null,
                                                "flags": 1,
                                                "index": 0,
                                                "key": null,
                                                "lanes": 0,
                                                "lastEffect": null,
                                                "memoizedProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "memoizedState": null,
                                                "mode": 0,
                                                "nextEffect": null,
                                                "pendingProps": Object {
                                                  "children": " Cancel ",
                                                  "href": "/",
                                                  "navigate": [Function],
                                                },
                                                "ref": null,
                                                "return": [Circular],
                                                "selfBaseDuration": 0,
                                                "sibling": null,
                                                "stateNode": null,
                                                "tag": 11,
                                                "treeBaseDuration": 0,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                                "updateQueue": null,
                                              },
                                              "childLanes": 0,
                                              "dependencies": Object {
                                                "firstContext": Object {
                                                  "context": Object {
                                                    "$$typeof": Symbol(react.context),
                                                    "Consumer": Object {
                                                      "$$typeof": Symbol(react.context),
                                                      "_calculateChangedBits": null,
                                                      "_context": [Circular],
                                                    },
                                                    "Provider": Object {
                                                      "$$typeof": Symbol(react.provider),
                                                      "_context": [Circular],
                                                    },
                                                    "_calculateChangedBits": null,
                                                    "_currentRenderer": Object {},
                                                    "_currentRenderer2": null,
                                                    "_currentValue": undefined,
                                                    "_currentValue2": undefined,
                                                    "_threadCount": 0,
                                                    "displayName": "Router",
                                                  },
                                                  "next": null,
                                                  "observedBits": 1073741823,
                                                },
                                                "lanes": 0,
                                                "responders": null,
                                              },
                                              "elementType": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "firstEffect": null,
                                              "flags": 1,
                                              "index": 0,
                                              "key": null,
                                              "lanes": 0,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": [Function],
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": [Function],
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": null,
                                              "tag": 9,
                                              "treeBaseDuration": 0,
                                              "type": Object {
                                                "$$typeof": Symbol(react.context),
                                                "_calculateChangedBits": null,
                                                "_context": Object {
                                                  "$$typeof": Symbol(react.context),
                                                  "Consumer": [Circular],
                                                  "Provider": Object {
                                                    "$$typeof": Symbol(react.provider),
                                                    "_context": [Circular],
                                                  },
                                                  "_calculateChangedBits": null,
                                                  "_currentRenderer": Object {},
                                                  "_currentRenderer2": null,
                                                  "_currentValue": undefined,
                                                  "_currentValue2": undefined,
                                                  "_threadCount": 0,
                                                  "displayName": "Router",
                                                },
                                              },
                                              "updateQueue": null,
                                            },
                                            "childLanes": 0,
                                            "dependencies": null,
                                            "elementType": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "firstEffect": null,
                                            "flags": 1,
                                            "index": 2,
                                            "key": null,
                                            "lanes": 0,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": " Cancel ",
                                              "to": "/",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": null,
                                            "tag": 11,
                                            "treeBaseDuration": 0,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "updateQueue": null,
                                          },
                                          "stateNode":     ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "button",
                                        "updateQueue": null,
                                      },
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": "div",
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 5,
                                      "key": null,
                                      "lanes": 0,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": Array [
                                          <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Register
                                          </button>,
                                          "    ",
                                          <ForwardRef(Link)
                                            to="/"
                                          >
                                             Cancel 
                                          </ForwardRef(Link)>,
                                        ],
                                        "className": "buttons",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="buttons"
                                      >
                                        <button
                                          class="btn btn-primary"
                                          type="button"
                                        >
                                          Register
                                        </button>
                                            
                                        <a
                                          href="/"
                                        >
                                           Cancel 
                                        </a>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <br />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "br",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <div
                                    class="fields"
                                  >
                                    <br />
                                    <p>
                                       
                                      Password
                                       
                                    </p>
                                    <input
                                      autocomplete="password"
                                      name="Password"
                                      required=""
                                      type="password"
                                      value=""
                                    />
                                    (*)
                                    <br />
                                    (at least 6 character)
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <div
                                  class="fields"
                                >
                                  <br />
                                  <p>
                                     
                                    Username
                                     
                                  </p>
                                   
                                  <input
                                    autocomplete="Username"
                                    name="Username"
                                    required=""
                                    type="text"
                                    value=""
                                  />
                                  (*)
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "div",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autoComplete="Username"
                                  name="Username"
                                  onChange={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>,
                              <div
                                className="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autoComplete="password"
                                  name="Password"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>,
                              <br />,
                              <div
                                className="buttons"
                              >
                                <button
                                  className="btn btn-primary"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <ForwardRef(Link)
                                  to="/"
                                >
                                   Cancel 
                                </ForwardRef(Link)>
                              </div>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "form",
                        "firstEffect": null,
                        "flags": 0,
                        "index": 1,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": "div",
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style={
                              Object {
                                "paddingTop": 10,
                                "position": "relative",
                              }
                            }
                            width="240"
                          />
                        </div>,
                        <form
                          onSubmit={[Function]}
                        >
                          <div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autoComplete="Username"
                                name="Username"
                                onChange={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              className="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autoComplete="password"
                                name="Password"
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              className="buttons"
                            >
                              <button
                                className="btn btn-primary"
                                onClick={[Function]}
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <ForwardRef(Link)
                                to="/"
                              >
                                 Cancel 
                              </ForwardRef(Link)>
                            </div>
                          </div>
                        </form>,
                      ],
                      "className": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Login"
                    >
                      <div
                        class="loginImage"
                      >
                        <img
                          alt="login"
                          height="175"
                          src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                          style="position: relative; padding-top: 10px;"
                          width="240"
                        />
                      </div>
                      <form>
                        <div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              First name
                               
                            </p>
                             
                            <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Last name
                               
                            </p>
                            <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Username
                               
                            </p>
                             
                            <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />
                            (*)
                          </div>
                          <div
                            class="fields"
                          >
                            <br />
                            <p>
                               
                              Password
                               
                            </p>
                            <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />
                            (*)
                            <br />
                            (at least 6 character)
                          </div>
                          <br />
                          <div
                            class="buttons"
                          >
                            <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>
                                
                            <a
                              href="/"
                            >
                               Cancel 
                            </a>
                          </div>
                        </div>
                      </form>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": Object {
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Array [
                          Array [],
                          [Function],
                        ],
                        "_currentValue2": Array [
                          Array [],
                          [Function],
                        ],
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router-History",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "lanes": 0,
                    "responders": null,
                  },
                  "elementType": [Function],
                  "firstEffect": null,
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": Object {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": Object {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": Object {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "firstEffect": null,
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <SignUP />,
                  "value": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router-History",
                  },
                },
                "updateQueue": null,
              },
              "childLanes": 0,
              "dependencies": null,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "firstEffect": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Context.Provider
                  value={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <SignUP />
                </Context.Provider>,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childLanes": 0,
            "dependencies": null,
            "elementType": [Function],
            "firstEffect": null,
            "flags": 5,
            "index": 0,
            "key": null,
            "lanes": 0,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <SignUP />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 146,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 144,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": [Circular],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 141,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": null,
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "createLegacyRoot()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": <div>
                        <div
                          class="Login"
                        >
                          <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>
                          <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "entangledLanes": 0,
                      "entanglements": Array [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": Array [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": Array [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "hydrate": false,
                      "interactionThreadID": 18,
                      "memoizedInteractions": Set {},
                      "mutableReadLanes": 0,
                      "mutableSourceEagerHydrationData": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": [Circular],
                  "flags": 256,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalInstance": Object {},
                  "_reactInternals": [Circular],
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "dependencies": null,
              "elementType": [Function],
              "firstEffect": [Circular],
              "flags": 5,
              "index": 0,
              "key": null,
              "lanes": 0,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <SignUP />,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <SignUP />,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 144,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": [Circular],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <SignUP />,
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 141,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 141,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": null,
                    "firstEffect": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "createLegacyRoot()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": <div>
                        <div
                          class="Login"
                        >
                          <div
                            class="loginImage"
                          >
                            <img
                              alt="login"
                              height="175"
                              src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                              style="position: relative; padding-top: 10px;"
                              width="240"
                            />
                          </div>
                          <form>
                            <div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  First name
                                   
                                </p>
                                 
                                <input
                                  name="FirstName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Last name
                                   
                                </p>
                                <input
                                  name="LastName"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Username
                                   
                                </p>
                                 
                                <input
                                  autocomplete="Username"
                                  name="Username"
                                  required=""
                                  type="text"
                                  value=""
                                />
                                (*)
                              </div>
                              <div
                                class="fields"
                              >
                                <br />
                                <p>
                                   
                                  Password
                                   
                                </p>
                                <input
                                  autocomplete="password"
                                  name="Password"
                                  required=""
                                  type="password"
                                  value=""
                                />
                                (*)
                                <br />
                                (at least 6 character)
                              </div>
                              <br />
                              <div
                                class="buttons"
                              >
                                <button
                                  class="btn btn-primary"
                                  type="button"
                                >
                                  Register
                                </button>
                                    
                                <a
                                  href="/"
                                >
                                   Cancel 
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "entangledLanes": 0,
                      "entanglements": Array [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": Array [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": Array [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "hydrate": false,
                      "interactionThreadID": 18,
                      "memoizedInteractions": Set {},
                      "mutableReadLanes": 0,
                      "mutableSourceEagerHydrationData": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": Object {
                        "callback": null,
                        "eventTime": 4158.6029,
                        "lane": 1,
                        "next": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <SignUP />,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": null,
                  "firstEffect": [Circular],
                  "flags": 256,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <SignUP />,
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "createLegacyRoot()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": <div>
                      <div
                        class="Login"
                      >
                        <div
                          class="loginImage"
                        >
                          <img
                            alt="login"
                            height="175"
                            src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                            style="position: relative; padding-top: 10px;"
                            width="240"
                          />
                        </div>
                        <form>
                          <div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                First name
                                 
                              </p>
                               
                              <input
                                name="FirstName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Last name
                                 
                              </p>
                              <input
                                name="LastName"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Username
                                 
                              </p>
                               
                              <input
                                autocomplete="Username"
                                name="Username"
                                required=""
                                type="text"
                                value=""
                              />
                              (*)
                            </div>
                            <div
                              class="fields"
                            >
                              <br />
                              <p>
                                 
                                Password
                                 
                              </p>
                              <input
                                autocomplete="password"
                                name="Password"
                                required=""
                                type="password"
                                value=""
                              />
                              (*)
                              <br />
                              (at least 6 character)
                            </div>
                            <br />
                            <div
                              class="buttons"
                            >
                              <button
                                class="btn btn-primary"
                                type="button"
                              >
                                Register
                              </button>
                                  
                              <a
                                href="/"
                              >
                                 Cancel 
                              </a>
                            </div>
                          </div>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "entangledLanes": 0,
                    "entanglements": Array [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": Array [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": Array [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "hydrate": false,
                    "interactionThreadID": 18,
                    "memoizedInteractions": Set {},
                    "mutableReadLanes": 0,
                    "mutableSourceEagerHydrationData": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <SignUP />,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalInstance": Object {},
                  "_reactInternals": [Circular],
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <SignUP />,
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalInstance": Object {},
                "_reactInternals": [Circular],
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <SignUP />,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "context": Object {},
          "props": Object {
            "children": <SignUP />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "refs": Object {},
          "state": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "unlisten": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <SignUP />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="Login"
            >
              <div
                class="loginImage"
              >
                <img
                  alt="login"
                  height="175"
                  src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                  style="position: relative; padding-top: 10px;"
                  width="240"
                />
              </div>
              <form>
                <div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      First name
                       
                    </p>
                     
                    <input
                      name="FirstName"
                      required=""
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      Last name
                       
                    </p>
                    <input
                      name="LastName"
                      required=""
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      Username
                       
                    </p>
                     
                    <input
                      autocomplete="Username"
                      name="Username"
                      required=""
                      type="text"
                      value=""
                    />
                    (*)
                  </div>
                  <div
                    class="fields"
                  >
                    <br />
                    <p>
                       
                      Password
                       
                    </p>
                    <input
                      autocomplete="password"
                      name="Password"
                      required=""
                      type="password"
                      value=""
                    />
                    (*)
                    <br />
                    (at least 6 character)
                  </div>
                  <br />
                  <div
                    class="buttons"
                  >
                    <button
                      class="btn btn-primary"
                      type="button"
                    >
                      Register
                    </button>
                        
                    <a
                      href="/"
                    >
                       Cancel 
                    </a>
                  </div>
                </div>
              </form>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="loginImage"
                >
                  <img
                    alt="login"
                    height="175"
                    src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                    style={
                      Object {
                        "paddingTop": 10,
                        "position": "relative",
                      }
                    }
                    width="240"
                  />
                </div>,
                <form
                  onSubmit={[Function]}
                >
                  <div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        First name
                         
                      </p>
                       
                      <input
                        name="FirstName"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        Last name
                         
                      </p>
                      <input
                        name="LastName"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        Username
                         
                      </p>
                       
                      <input
                        autoComplete="Username"
                        name="Username"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        Password
                         
                      </p>
                      <input
                        autoComplete="password"
                        name="Password"
                        onChange={[Function]}
                        required={true}
                        type="password"
                        value=""
                      />
                      (*)
                      <br />
                      (at least 6 character)
                    </div>
                    <br />
                    <div
                      className="buttons"
                    >
                      <button
                        className="btn btn-primary"
                        onClick={[Function]}
                        type="button"
                      >
                        Register
                      </button>
                          
                      <ForwardRef(Link)
                        to="/"
                      >
                         Cancel 
                      </ForwardRef(Link)>
                    </div>
                  </div>
                </form>,
              ],
              "className": "Login",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="loginImage"
                >
                  <img
                    alt="login"
                    height="175"
                    src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                    style="position: relative; padding-top: 10px;"
                    width="240"
                  />
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <img
                    alt="login"
                    height="175"
                    src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                    style={
                      Object {
                        "paddingTop": 10,
                        "position": "relative",
                      }
                    }
                    width="240"
                  />,
                  "className": "loginImage",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <img
                      alt="login"
                      height="175"
                      src="https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png"
                      style="position: relative; padding-top: 10px;"
                      width="240"
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "login",
                      "height": "175",
                      "src": "https://i.ibb.co/GQVfRg9/Sandwich2-removebg-preview.png",
                      "style": Object {
                        "paddingTop": 10,
                        "position": "relative",
                      },
                      "width": "240",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "img",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <form>
                  <div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        First name
                         
                      </p>
                       
                      <input
                        name="FirstName"
                        required=""
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        Last name
                         
                      </p>
                      <input
                        name="LastName"
                        required=""
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        Username
                         
                      </p>
                       
                      <input
                        autocomplete="Username"
                        name="Username"
                        required=""
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      class="fields"
                    >
                      <br />
                      <p>
                         
                        Password
                         
                      </p>
                      <input
                        autocomplete="password"
                        name="Password"
                        required=""
                        type="password"
                        value=""
                      />
                      (*)
                      <br />
                      (at least 6 character)
                    </div>
                    <br />
                    <div
                      class="buttons"
                    >
                      <button
                        class="btn btn-primary"
                        type="button"
                      >
                        Register
                      </button>
                          
                      <a
                        href="/"
                      >
                         Cancel 
                      </a>
                    </div>
                  </div>
                </form>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        First name
                         
                      </p>
                       
                      <input
                        name="FirstName"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        Last name
                         
                      </p>
                      <input
                        name="LastName"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        Username
                         
                      </p>
                       
                      <input
                        autoComplete="Username"
                        name="Username"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value=""
                      />
                      (*)
                    </div>
                    <div
                      className="fields"
                    >
                      <br />
                      <p>
                         
                        Password
                         
                      </p>
                      <input
                        autoComplete="password"
                        name="Password"
                        onChange={[Function]}
                        required={true}
                        type="password"
                        value=""
                      />
                      (*)
                      <br />
                      (at least 6 character)
                    </div>
                    <br />
                    <div
                      className="buttons"
                    >
                      <button
                        className="btn btn-primary"
                        onClick={[Function]}
                        type="button"
                      >
                        Register
                      </button>
                          
                      <ForwardRef(Link)
                        to="/"
                      >
                         Cancel 
                      </ForwardRef(Link)>
                    </div>
                  </div>,
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          First name
                           
                        </p>
                         
                        <input
                          name="FirstName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Last name
                           
                        </p>
                        <input
                          name="LastName"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Username
                           
                        </p>
                         
                        <input
                          autocomplete="Username"
                          name="Username"
                          required=""
                          type="text"
                          value=""
                        />
                        (*)
                      </div>
                      <div
                        class="fields"
                      >
                        <br />
                        <p>
                           
                          Password
                           
                        </p>
                        <input
                          autocomplete="password"
                          name="Password"
                          required=""
                          type="password"
                          value=""
                        />
                        (*)
                        <br />
                        (at least 6 character)
                      </div>
                      <br />
                      <div
                        class="buttons"
                      >
                        <button
                          class="btn btn-primary"
                          type="button"
                        >
                          Register
                        </button>
                            
                        <a
                          href="/"
                        >
                           Cancel 
                        </a>
                      </div>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            onChange={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />
                          (*)
                        </div>,
                        <div
                          className="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            onChange={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />
                          (*)
                        </div>,
                        <div
                          className="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autoComplete="Username"
                            name="Username"
                            onChange={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />
                          (*)
                        </div>,
                        <div
                          className="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autoComplete="password"
                            name="Password"
                            onChange={[Function]}
                            required={true}
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>,
                        <br />,
                        <div
                          className="buttons"
                        >
                          <button
                            className="btn btn-primary"
                            onClick={[Function]}
                            type="button"
                          >
                            Register
                          </button>
                              
                          <ForwardRef(Link)
                            to="/"
                          >
                             Cancel 
                          </ForwardRef(Link)>
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            First name
                             
                          </p>
                           
                          <input
                            name="FirstName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <br />,
                            <p>
                               
                              First name
                               
                            </p>,
                            " ",
                            <input
                              name="FirstName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />,
                            "(*)",
                          ],
                          "className": "fields",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <br />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {},
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "br",
                          },
                          Object {
                            "instance": <p>
                               
                              First name
                               
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                " ",
                                "First name",
                                " ",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              " ",
                              "First name",
                              " ",
                            ],
                            "type": "p",
                          },
                          " ",
                          Object {
                            "instance": <input
                              name="FirstName"
                              required=""
                              type="text"
                              value=""
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "name": "FirstName",
                              "onChange": [Function],
                              "required": true,
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                          "(*)",
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Last name
                             
                          </p>
                          <input
                            name="LastName"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <br />,
                            <p>
                               
                              Last name
                               
                            </p>,
                            <input
                              name="LastName"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />,
                            "(*)",
                          ],
                          "className": "fields",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <br />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {},
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "br",
                          },
                          Object {
                            "instance": <p>
                               
                              Last name
                               
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                " ",
                                "Last name",
                                " ",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              " ",
                              "Last name",
                              " ",
                            ],
                            "type": "p",
                          },
                          Object {
                            "instance": <input
                              name="LastName"
                              required=""
                              type="text"
                              value=""
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "name": "LastName",
                              "onChange": [Function],
                              "required": true,
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                          "(*)",
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Username
                             
                          </p>
                           
                          <input
                            autocomplete="Username"
                            name="Username"
                            required=""
                            type="text"
                            value=""
                          />
                          (*)
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <br />,
                            <p>
                               
                              Username
                               
                            </p>,
                            " ",
                            <input
                              autoComplete="Username"
                              name="Username"
                              onChange={[Function]}
                              required={true}
                              type="text"
                              value=""
                            />,
                            "(*)",
                          ],
                          "className": "fields",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <br />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {},
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "br",
                          },
                          Object {
                            "instance": <p>
                               
                              Username
                               
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                " ",
                                "Username",
                                " ",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              " ",
                              "Username",
                              " ",
                            ],
                            "type": "p",
                          },
                          " ",
                          Object {
                            "instance": <input
                              autocomplete="Username"
                              name="Username"
                              required=""
                              type="text"
                              value=""
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "autoComplete": "Username",
                              "name": "Username",
                              "onChange": [Function],
                              "required": true,
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                          "(*)",
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <div
                          class="fields"
                        >
                          <br />
                          <p>
                             
                            Password
                             
                          </p>
                          <input
                            autocomplete="password"
                            name="Password"
                            required=""
                            type="password"
                            value=""
                          />
                          (*)
                          <br />
                          (at least 6 character)
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <br />,
                            <p>
                               
                              Password
                               
                            </p>,
                            <input
                              autoComplete="password"
                              name="Password"
                              onChange={[Function]}
                              required={true}
                              type="password"
                              value=""
                            />,
                            "(*)",
                            <br />,
                            "(at least 6 character)",
                          ],
                          "className": "fields",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <br />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {},
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "br",
                          },
                          Object {
                            "instance": <p>
                               
                              Password
                               
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                " ",
                                "Password",
                                " ",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              " ",
                              "Password",
                              " ",
                            ],
                            "type": "p",
                          },
                          Object {
                            "instance": <input
                              autocomplete="password"
                              name="Password"
                              required=""
                              type="password"
                              value=""
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "autoComplete": "password",
                              "name": "Password",
                              "onChange": [Function],
                              "required": true,
                              "type": "password",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                          "(*)",
                          Object {
                            "instance": <br />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {},
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "br",
                          },
                          "(at least 6 character)",
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <br />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "br",
                      },
                      Object {
                        "instance": <div
                          class="buttons"
                        >
                          <button
                            class="btn btn-primary"
                            type="button"
                          >
                            Register
                          </button>
                              
                          <a
                            href="/"
                          >
                             Cancel 
                          </a>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <button
                              className="btn btn-primary"
                              onClick={[Function]}
                              type="button"
                            >
                              Register
                            </button>,
                            "    ",
                            <ForwardRef(Link)
                              to="/"
                            >
                               Cancel 
                            </ForwardRef(Link)>,
                          ],
                          "className": "buttons",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <button
                              class="btn btn-primary"
                              type="button"
                            >
                              Register
                            </button>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Register",
                              "className": "btn btn-primary",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Register",
                            ],
                            "type": "button",
                          },
                          "    ",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": " Cancel ",
                              "to": "/",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": " Cancel ",
                                "href": "/",
                                "navigate": [Function],
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": <a
                                  href="/"
                                >
                                   Cancel 
                                </a>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": " Cancel ",
                                  "href": "/",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "rendered": Array [
                                  " Cancel ",
                                ],
                                "type": "a",
                              },
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "innerRef": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            },
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "form",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSeventeenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <BrowserRouter>
    <SignUP />
  </BrowserRouter>,
  Symbol(enzyme.__updatedBy__): null,
}
`;
