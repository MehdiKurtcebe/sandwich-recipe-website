{"version":3,"sources":["http-common.js","services/RecipieService.js","components/HomePage/Recipies.jsx","components/HomePage/Main.jsx","components/HomePage/Footer.jsx","components/HomePage/Header.jsx","components/AllRecipesPage/ShowRecipies.jsx","components/AllRecipesPage/RecipeList.jsx","components/AllRecipesPage/FilterBox.jsx","components/AllRecipesPage/AllRecipies.jsx","components/RecipePage/Recipe.jsx","components/RecipePage/RecipeData.jsx","components/Search/SearchBar.jsx","components/Search/Search.jsx","components/Search/SearchData.jsx","components/Error_Page/Error.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","RecipieService","getAll","http","get","id","concat","data","post","update","put","remove","delete","removeAll","findById","getCategories","Recipies","_useState","useState","_useState2","Object","slicedToArray","recipies","setRecipies","useEffect","retrieveRecipies","RecipieDataService","then","response","console","log","catch","e","react_default","a","createElement","className","reactstrap_es","slice","length","map","recipie","index","md","key","top","width","height","src","imgURL","name","href","_id","variant","color","size","block","Main","user_input","setInput","history","useHistory","role","addonType","tag","RRLink","to","placeholder","onChange","target","value","onKeyPress","charCode","push","HomePage_Recipies","Footer","props","Header","_ref","collapsed","toggleNavbar","socialLinks","dark","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","alt","loading","style","len","RecipieList","ShowRecipies","brands","handleSelectBox","paddingRight","brand","type","onClick","All","state","selectedCheckboxes","Set","current_recipies","retrieveBrands","_this","setState","has","add","selectedBoxes","temp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rec","category","includes","err","return","this","paddingTop","paddingLeft","marginLeft","FilterBox","RecipeList","Component","Recipe","img1","img2","img3","link1","link2","link3","name1","name2","name3","recipe","all_recipies","random","parseInt","Math","_ref2","children","useMediaQuery","minWidth","ingredients_quantities","ingredients","fontWeight","directions","_ref3","maxWidth","RecipeData","_useState3","_useState4","setRecipiesAll","window","location","pathname","split","retrieveRecipiesAll","components_RecipePage_Recipe","SearchBar","textAlign","Search","recipes","param","counter","results","searchList","toLowerCase","i","replace","trim","letter","toUpperCase","forEach","element","val","isInclude","Search_SearchBar","SearchData","setRecipes","getRecipes","searchParam","substring","components_Search_Search","Error","Example","HomePage_Header","react_router","path","exact","component","AllRecipies","ErrorPage","HomePage_Footer","React","Boolean","hostname","match","ReactDOM","render","react_router_dom","App_Example","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ddb5692c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:5000/\"\r\n  });","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/recipes\");\r\n};\r\nconst getCategories = () => {\r\n  return http.get(\"/categories\");\r\n};\r\nconst get = id => {\r\n  return http.get(`/recipes/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/recipes\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/recipes/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/recipes/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/recipes`);\r\n};\r\n\r\nconst findById = id => {\r\n  return http.get(`/recipes?_id=${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findById,\r\n  getCategories\r\n};","import React, { useState, useEffect } from 'react';\r\nimport RecipieDataService from '../../services/RecipieService';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from 'reactstrap';\r\n\r\nconst Recipies = () => {\r\n    const [recipies, setRecipies] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        retrieveRecipies();\r\n    }, []);\r\n\r\n    const retrieveRecipies = () => {\r\n        RecipieDataService.getAll()\r\n            .then(response => {\r\n                setRecipies(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"recipies\">\r\n            <Container>\r\n                <Row>\r\n                    {recipies.slice(12, recipies.length).map((recipie, index) => {\r\n                        return (\r\n                            <Col md=\"4\" key={index}>\r\n                                <Card className=\"mb-4 box-shadow\">\r\n                                    <CardImg\r\n                                        top\r\n                                        width=\"180\" \r\n                                        height=\"250\"\r\n                                        src={recipie.imgURL}\r\n                                    />\r\n                                    <CardBody className=\"text-center\">\r\n                                        {/*THERE WILL AN item OBJECT IN DATABASE AND IT WILL BE PRINTED IN HERE*/}\r\n                                        <CardText><strong >{recipie.name}</strong></CardText>\r\n\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <Button\r\n                                                href={`/recipe/${recipie._id}`}\r\n                                                variant = \"outline-dark\"\r\n                                                color=\"secondary\"\r\n                                                size=\"lg\"\r\n                                                block\r\n                                            >\r\n                                            <strong>Show</strong>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipies;\r\n","import React, { useState } from 'react';\r\nimport Recipies from './Recipies';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    Button,\r\n    Container,\r\n    Jumbotron,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input\r\n} from 'reactstrap';\r\nimport { Link as RRLink } from 'react-router-dom';\r\n\r\nconst Main = () => {\r\n    const [user_input, setInput] = useState('');\r\n    let history = useHistory();\r\n    const onChange = e => {\r\n        setInput(e);\r\n    };\r\n    const handleKeyPress = target => {\r\n        if (target.charCode === 13) {\r\n            history.push(`/search/${user_input}`);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <main role=\"main\">\r\n                <Jumbotron className=\"text-center\">\r\n                    <Container>\r\n                        <h1 className=\"jumbotron-heading\">Sandwich Search </h1>\r\n                        <p className=\"lead text-muted\">\r\n                            Enter ingredients by separating with comma you want\r\n                            to search for\r\n                        </p>\r\n                        <div>\r\n                            <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <Button\r\n                                        tag={RRLink}\r\n                                        to={`/search/${user_input}`}\r\n                                    >\r\n                                        Search\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                    placeholder=\"e.g. Sugar,Salt,Water,Tomato\"\r\n                                    onChange={e =>\r\n                                        onChange(`${e.target.value}`)\r\n                                    }\r\n                                    onKeyPress={handleKeyPress}\r\n                                />\r\n                            </InputGroup>\r\n                        </div>\r\n                    </Container>\r\n                </Jumbotron>\r\n                <Recipies />\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className=\"text-muted\">\r\n            <Container>\r\n                <p>Copyright to &copy; Sandwich</p>\r\n                <p>\r\n                    Project's Github available on:\r\n                    <a href=\"https://github.com/akifkartal03/sandwich-recipe-app\">\r\n                         Visit our github page\r\n                    </a>\r\n                    .\r\n                </p>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {\r\n    Container,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavLink,\r\n} from 'reactstrap';\r\nimport {Link as RRLink} from 'react-router-dom'\r\n\r\nconst Header = ({ collapsed, toggleNavbar, socialLinks }) => {\r\n    \r\n    return (\r\n        <header>\r\n            <Navbar color=\"dark\" dark>\r\n                <Container>\r\n                    {/* <Collapse isOpen={!collapsed} navbar>\r\n                        <Row>\r\n                            <Col sm=\"8\" md=\"7\" className=\"py-4\">\r\n                                <h4 className=\"text-white\">Sandwich</h4>\r\n                                <p className=\"text-muted\">\r\n                                    Welcome to Sandwich Recipe Website Project!\r\n                                </p>\r\n                            </Col>\r\n                            <Col sm=\"4\" md={{ offset: 1 }} className=\"py-4\">\r\n                                <h4 className=\"text-white\">Contact</h4>\r\n                                <p className=\"text-white\">\r\n                                    Dissapointer Group INC.\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Collapse> */}\r\n                    <NavbarBrand\r\n                        href=\"/\"\r\n                        className=\"d-flex align-items-center mr-auto\"\r\n                    >\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"20\"\r\n                            height=\"20\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            className=\"mr-2\"\r\n                        />\r\n                        <a className=\"navbar-brand\" href=\"/\">\r\n                            <img\r\n                                src=\"https://i.ibb.co/12pWKWZ/Sandwich2.png\"\r\n                                width=\"70\"\r\n                                height=\"50\"\r\n                                className=\"d-inline-block align-top\"\r\n                                alt=\"\"\r\n                                loading=\"lazy\"\r\n                            />\r\n                        </a>\r\n                        <NavLink style={{color: 'white'}} tag={RRLink} to=\"/\"> Home </NavLink>\r\n                        <NavLink style={{color: 'white'}} tag={RRLink} to=\"/allrecipespage\"> All Recipies </NavLink>\r\n\r\n                    </NavbarBrand>\r\n                    {/* <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" /> */}\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from 'reactstrap';\r\nconst Recipies = ({ recipies }) => {\r\n    let len = 4;\r\n    if (recipies && recipies.length === 1 && recipies[0]._id === '5fb967aed21567abd722a076')\r\n        len = 14;\r\n    return (\r\n        <div className=\"container\">\r\n            <Container>\r\n                <Row className=\"row\">\r\n                    {recipies.map((recipie, index) => {\r\n                        return (\r\n                            <Col md={len} key={index}>\r\n                                <Card className=\"mb-4 box-shadow\">\r\n                                    <CardImg\r\n                                        top\r\n                                        width=\"180\"\r\n                                        height=\"250\"\r\n                                        src={recipie.imgURL}\r\n                                    />\r\n                                    <CardBody className=\"text-center\">\r\n                                        {/*THERE WILL AN item OBJECT IN DATABASE AND IT WILL BE PRINTED IN HERE*/}\r\n                                        <CardText className=\"cardText\">\r\n                                            <strong className=\"strong\">\r\n                                                {recipie.name}\r\n                                            </strong>\r\n                                        </CardText>\r\n\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <Button\r\n                                                className=\"showButton\"\r\n                                                href={`/recipe/${recipie._id}`}\r\n                                                variant=\"outline-dark\"\r\n                                                color=\"secondary\"\r\n                                                size=\"lg\"\r\n                                                block\r\n                                            >\r\n                                                <strong>Show</strong>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipies;\r\n","import React from 'react';\r\nimport Recipies from './ShowRecipies';\r\nconst RecipieList = ({ recipies }) => {\r\n    \r\n    return (\r\n        <div className=\"col-lg-9\">\r\n            <div className=\"row\">\r\n                <div className=\"col-30\">\r\n                    <Recipies recipies={recipies} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default RecipieList;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst Recipies = ({ brands, handleSelectBox }) => {\r\n    return (\r\n        <div className=\"col-lg-3\" style={{ paddingRight: '3rem' }}>\r\n            <div className=\"row\">\r\n                <div className=\"col-15\">\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"filter_title\">Categories</h3>\r\n                        </div>\r\n                        <ul className=\"list-group flex-row flex-wrap\" id='ul1'>\r\n                            {brands.map(brand => (\r\n                                <li\r\n                                    className=\"list-group-item flex-50\"\r\n                                    key={brand._id}\r\n                                >\r\n                                    <label className=\"custom-checkbox text-capitalize\">\r\n                                        {' '}\r\n                                        {brand.name}\r\n                                        <input\r\n                                                type=\"checkbox\"\r\n                                                name={brand.name}\r\n                                                className=\"custom-checkbox__input\"\r\n                                                //onInput={handleSelectBox}\r\n                                                onClick={handleSelectBox}\r\n                                                id=\"checkbox\"\r\n                                                key={brand._id}\r\n                                            />\r\n                                        <span className=\"custom-checkbox__span\" />\r\n                                    </label>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipies;\r\n","import RecipieDataService from '../../services/RecipieService';\r\nimport RecipeList from './RecipeList';\r\nimport FilterBox from './FilterBox';\r\nimport React, { Component } from 'react';\r\n\r\nclass All extends Component {\r\n    state = {\r\n        brands: [],\r\n        recipies:[],\r\n        selectedCheckboxes: new Set(),\r\n        current_recipies: []\r\n    };\r\n    \r\n    retrieveBrands = () => {\r\n        RecipieDataService.getCategories()\r\n            .then(response => {\r\n                this.setState({ brands: response.data });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    retrieveRecipies = () => {\r\n        RecipieDataService.getAll()\r\n            .then(response => {\r\n                this.setState({ recipies: response.data });\r\n                this.setState({ current_recipies: response.data });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    componentDidMount() {\r\n        this.retrieveBrands();\r\n        this.retrieveRecipies();\r\n        this.setState({ selectedCheckboxes: new Set() });\r\n    }\r\n    handleSelectBox = e => {\r\n        const name = e.target.name;\r\n        if (this.state.selectedCheckboxes.has(name)) {\r\n            this.state.selectedCheckboxes.delete(name);\r\n        } else {\r\n            this.state.selectedCheckboxes.add(name);\r\n        }\r\n        this.setState({ selectedBoxes: this.state.selectedCheckboxes });\r\n        if (this.state.selectedCheckboxes.size !== 0) {\r\n            this.setRecipies();\r\n        } else {\r\n            this.setState({ current_recipies: this.state.recipies });\r\n        }\r\n    };\r\n    setRecipies = () => {\r\n       let temp=[]\r\n       for (let item of this.state.selectedCheckboxes){\r\n            for (let rec of this.state.recipies){\r\n                if(rec.category.includes(item) && !temp.includes(rec)){\r\n                    temp.push(rec)\r\n                }\r\n            }\r\n       }\r\n        this.setState({ current_recipies: temp });\r\n    };\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"container\" \r\n                style={{ paddingTop: '2rem', paddingLeft: '0rem' }}\r\n            >\r\n                <div className=\"row\" style={{ marginLeft: '-5rem' }}>\r\n                    <FilterBox id='categori_filter'\r\n                        brands={this.state.brands}\r\n                        handleSelectBox={this.handleSelectBox}\r\n                    />\r\n                    <RecipeList id='recipie_list'\r\n                        recipies={this.state.current_recipies}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default All;\r\n","import './Recipe.css';\r\nimport React from 'react';\r\n\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst Recipe = ({recipe,all_recipies}) => {\r\n    \r\n    \r\n    var random = parseInt(Math.random() * all_recipies.length);\r\n    var img1, img2, img3;\r\n    var link1, link2, link3;\r\n    var name1, name2, name3;\r\n    \r\n        if (\r\n            all_recipies &&\r\n            all_recipies.length > 0 &&\r\n            all_recipies[random] &&\r\n            all_recipies[(random + 1) % all_recipies.length]\r\n        ) {\r\n            img1 = all_recipies[random].imgURL;\r\n            link1 = all_recipies[random]._id;\r\n            name1 = all_recipies[random].name;\r\n            random = (random + 1) % all_recipies.length;\r\n            if (\r\n                all_recipies &&\r\n                all_recipies.length > 0 &&\r\n                all_recipies[random] &&\r\n                all_recipies[(random + 1) % all_recipies.length]\r\n            ) {\r\n                img2 = all_recipies[random].imgURL;\r\n                link2 = all_recipies[random]._id;\r\n                name2 = all_recipies[random].name;\r\n            }\r\n            random = (random + 1) % all_recipies.length;\r\n            if (\r\n                all_recipies &&\r\n                all_recipies.length > 0 &&\r\n                all_recipies[random] &&\r\n                all_recipies[(random + 1) % all_recipies.length]\r\n            ) {\r\n                img3 = all_recipies[random].imgURL;\r\n                link3 = all_recipies[random]._id;\r\n                name3 = all_recipies[random].name;\r\n            }\r\n        }\r\n    const Default = ({ children }) => {\r\n        const isNotMobile = useMediaQuery({ minWidth: 992 })\r\n        return isNotMobile ? children : null\r\n      }\r\n      const MobileorTablet = ({ children }) => {\r\n        const isMobileorTablet = useMediaQuery({ maxWidth: 991 })\r\n        return isMobileorTablet ? children : null\r\n      }\r\n \r\n    return (\r\n        <div className=\"App\">\r\n            <Default>\r\n            <div className=\"Recipe\">\r\n                <div>\r\n                    <elemnt id=\"image\" >\r\n                        <img src={recipe.imgURL} width=\"320px\" height=\"320px\" alt=' ' />\r\n                    </elemnt>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <h3 className=\"Recipe-name\">{recipe.name}</h3>\r\n                <div className=\"IngredientInfo\">\r\n                    <div>\r\n                        {recipe.ingredients_quantities &&\r\n                            recipe.ingredients_quantities.map((data, index) => {\r\n                                return <div>{data}</div>;\r\n                            })}\r\n                    </div>\r\n                    <div>\r\n                        {recipe.ingredients &&\r\n                            recipe.ingredients.map((data, index) => {\r\n                                return <div>{data}</div>;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Recipe-directions\">\r\n                <h3 style={{ color: '#af1507', fontWeight: 'bolder' }}>\r\n                    {' '}\r\n                    Directions{' '}\r\n                </h3>\r\n                <p>{recipe.directions}</p>\r\n            </div>\r\n            <div className=\"SmallRecipeies\">\r\n                <div className=\"title\">\r\n                    <h3 style={{fontWeight: 'bolder' }}>\r\n                        {' '}\r\n                        Browse More{' '}\r\n                    </h3>\r\n                </div>\r\n                <div id=\"imagesmall\">\r\n                    <a href={`/recipe/${link1}`}>\r\n                        <img src={img1} height=\"150px\" width=\"150px\" alt=' ' />\r\n                        <p className=\"small-image-name\">{name1}</p>\r\n                    </a>\r\n                </div>\r\n                <div id=\"imagesmall\">\r\n                    <a href={`/recipe/${link2}`}>\r\n                        <img src={img2} height=\"150px\" width=\"150px\" alt=' '/>\r\n                        <p className=\"small-image-name\">{name2}</p>\r\n                    </a>\r\n                </div>\r\n                <div id=\"imagesmall\">\r\n                    <a href={`/recipe/${link3}`}>\r\n                        <img src={img3} height=\"150px\" width=\"150px\"  alt=' '/>\r\n                        <p className=\"small-image-name\">{name3}</p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            </Default>\r\n            <MobileorTablet>\r\n            <div className=\"Recipe\">\r\n                <div>\r\n                    <elemnt id=\"image\">\r\n                        <img src={recipe.imgURL} width=\"320px\" height=\"320px\" alt=' '/>\r\n                    </elemnt>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <h3 className=\"Recipe-name\">{recipe.name}</h3>\r\n                <div className=\"IngredientInfo\">\r\n                    <div>\r\n                        {recipe.ingredients_quantities &&\r\n                            recipe.ingredients_quantities.map((data, index) => {\r\n                                return <div>{data}</div>;\r\n                            })}\r\n                    </div>\r\n                    <div>\r\n                        {recipe.ingredients &&\r\n                            recipe.ingredients.map((data, index) => {\r\n                                return <div>{data}</div>;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            \r\n            <div className=\"Recipe-directions\">\r\n                <h3 style={{ color: '#af1507', fontWeight: 'bolder' }}>\r\n                    {' '}\r\n                    Directions{' '}\r\n                </h3>\r\n                <p>{recipe.directions}</p>\r\n            </div>\r\n            <div className=\"SmallRecipeies\">\r\n                <div className=\"title\">\r\n                    <h3 style={{fontWeight: 'bolder' }}>\r\n                        {' '}\r\n                        Browse More{' '}\r\n                    </h3>\r\n                </div>\r\n                <div id=\"imagesmall\">\r\n                    <a href={`/recipe/${link1}`}>\r\n                        <img src={img1} height=\"150px\" width=\"150px\" alt=' '/>\r\n                        <p className=\"small-image-name\">{name1}</p>\r\n                    </a>\r\n                </div>\r\n                <div id=\"imagesmall\">\r\n                    <a href={`/recipe/${link2}`}>\r\n                        <img src={img2} height=\"150px\" width=\"150px\" alt=' '/>\r\n                        <p className=\"small-image-name\">{name2}</p>\r\n                    </a>\r\n                </div>\r\n                <div id=\"imagesmall\">\r\n                    <a href={`/recipe/${link3}`}>\r\n                        <img src={img3} height=\"150px\" width=\"150px\" alt=' '/>\r\n                        <p className=\"small-image-name\">{name3}</p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </MobileorTablet>\r\n        </div>\r\n    );\r\n};\r\nexport default Recipe;\r\n\r\n","import RecipieDataService from '../../services/RecipieService';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Recipe from './Recipe';\r\n\r\nconst RecipeData = () => {\r\n    const [recipe, setRecipies] = useState([]);\r\n\r\n    const [all_recipies, setRecipiesAll] = useState([]);\r\n\r\n    const id = window.location.pathname.split('/')[\r\n        window.location.pathname.split('/').length - 1\r\n    ];\r\n\r\n    useEffect(() => {\r\n        retrieveRecipies();\r\n        retrieveRecipiesAll();\r\n    }, []);\r\n\r\n    const retrieveRecipies = () => {\r\n        RecipieDataService.get(id)\r\n            .then(response => {\r\n                setRecipies(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const retrieveRecipiesAll = () => {\r\n        RecipieDataService.getAll()\r\n            .then(response => {\r\n                setRecipiesAll(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <Recipe recipe={recipe} all_recipies={all_recipies} />\r\n        </div>\r\n    );\r\n};\r\nexport default RecipeData;\r\n","import React, { useState } from 'react';\r\nimport './Search.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Jumbotron,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input\r\n} from 'reactstrap';\r\nimport { Link as RRLink } from 'react-router-dom';\r\n\r\nconst SearchBar = () => {\r\n    const [user_input, setInput] = useState('');\r\n    let history = useHistory();\r\n    const onChange = e => {\r\n        setInput(e);\r\n    };\r\n    const handleKeyPress= target => {\r\n        if(target.charCode===13){\r\n            history.push(`/search/${user_input}`);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <main role=\"main\">\r\n                <Jumbotron className=\"text-center\" id = \"jumbotron\">\r\n                    <Container>\r\n                        <h1 className=\"jumbotron-heading\">Sandwich Search </h1>\r\n                        <p className=\"lead text-muted\">\r\n                            Enter ingredients by separating with comma you want to search for\r\n                        </p>\r\n                        <div>\r\n                            <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <Button\r\n                                        tag={RRLink}\r\n                                        to={`/search/${user_input}`}\r\n                                    >\r\n                                        Search\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                                <Input placeholder=\"e.g. Sugar,Salt,Water,Tomato\"\r\n                                    onChange={e =>\r\n                                        onChange(`${e.target.value}`)\r\n                                    }\r\n                                    onKeyPress={handleKeyPress}\r\n                                />\r\n                            </InputGroup>\r\n                        </div>\r\n                    </Container>\r\n                    <br/><br/><h2 className=\"head\" style={{textAlign:'left',color: '#af1507', fontWeight: 'bolder'}}>Search Results </h2>\r\n                </Jumbotron>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport ShowResults from '../AllRecipesPage/ShowRecipies';\r\nconst Search = ({ recipes, param }) => {\r\n    var counter = 0;\r\n    var results = [];\r\n    var searchList = param.toLowerCase().split(',');\r\n    for (var i = 0; i < searchList.length; i++) {\r\n        searchList[i] = searchList[i].replace(/%20/g, ' ').trim();\r\n        searchList[i] = searchList[i].replace(/(^\\w{1})|(\\s+\\w{1})/g, letter =>\r\n            letter.toUpperCase()\r\n        );\r\n    }\r\n    recipes.forEach(element => {\r\n        counter = 0;\r\n        searchList.forEach(val => isInclude(element, val));\r\n        if (counter >= element.ingredients.length * 0.7) {\r\n            results.push(element);\r\n        }\r\n    });\r\n    function isInclude(element, val) {\r\n        if (element.ingredients.includes(val)) {\r\n            counter = counter + 1;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <SearchBar />\r\n            <ShowResults recipies={results}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from 'react';\r\nimport RecipieDataService from '../../services/RecipieService';\r\nimport Search from './Search';\r\n\r\nconst SearchData = () => {\r\n    const [recipes, setRecipes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getRecipes();\r\n    }, []);\r\n\r\n    const getRecipes = () => {\r\n        RecipieDataService.getAll()\r\n            .then(response => {\r\n                setRecipes(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const searchParam = window.location.pathname.substring(8);\r\n\r\n    console.log('Search param = ' + searchParam);\r\n    return (\r\n        <div>\r\n            <Search recipes={recipes} param={searchParam} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchData;\r\n","import React from 'react';\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <br/><h3 className=\"head\" style={{textAlign:'left',color: '#af1507', fontWeight: 'bolder'}}>There is no recipe with your ingredient </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport {Route, Switch, } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Main from './components/HomePage/Main';\r\nimport Footer from './components/HomePage/Footer';\r\nimport Header from './components/HomePage/Header';\r\nimport './BrandFilter.css';\r\nimport './App.css';\r\nimport AllRecipies from './components/AllRecipesPage/AllRecipies';\r\nimport Recipe from './components/RecipePage/RecipeData';\r\nimport SearchData from './components/Search/SearchData'\r\nimport ErrorPage from './components/Error_Page/Error'\r\nexport default class Example extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Main} />\r\n                    <Route path=\"/recipe/:id\" exact component={Recipe} />\r\n                    <Route path=\"/allrecipespage\" component={AllRecipies} />\r\n                    <Route path=\"/search\" component={SearchData} />\r\n                    <Route path=\"/notFound\" component={ErrorPage} />\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}